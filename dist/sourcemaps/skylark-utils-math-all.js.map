{"version":3,"sources":["skylark-utils-math-all.js"],"names":["factory","globals","absolute","relative","base","stack","split","parts","pop","i","length","push","join","define","require","isAmd","amd","isCmd","exports","map","id","deps","dep","hasOwnProperty","Error","module","args","forEach","apply","window","skylarkjs","skylark","createAssigner","keysFunc","defaults","obj","arguments","Object","index","source","keys","l","key","advise","dispatcher","type","advice","receiveArguments","signal","previous","around","advised","this","remove","target","next","nextId","aspect","methodName","existing","executionId","before","results","after","newResults","undefined","call","allKeys","isObject","createEvent","props","e","CustomEvent","safeMixin","debounce","fn","wait","timeout","later","clearTimeout","setTimeout","values","_","Array","clone","src","checkCloneMethod","copy","isArray","isPlainObject","compact","array","filter","item","dasherize","str","replace","toLowerCase","deserializeValue","value","test","JSON","parse","each","callback","undef","flatten","isArrayLike","result","j","funcArg","context","arg","idx","payload","isFunction","getQueryParams","url","location","href","segs","params","queryParam","nv","grep","out","has","path","inArray","indexOf","inherit","ctor","f","prototype","object","constructor","isString","isHtmlNode","isBoolean","isDocument","nodeType","DOCUMENT_NODE","isEqual","a","b","eq","isWindow","getPrototypeOf","isDefined","Node","isInstanceOf","Number","String","Boolean","isNumber","isSameOrigin","origin","protocol","hostname","port","startsWith","isEmptyObject","name","isMatch","attrs","makeArray","offset","startWith","concat","slice","elements","defer","requestAnimationFrame","setTimeoutout","noop","proxy","proxyFn","unshift","TypeError","toPixel","parseFloat","trim","removeItem","items","splice","_mixin","deep","safe","_parseMixinArgs","shift","sources","mixin","fallback","prop","substitute","template","transform","thisObject","getObject","match","retVal","getValue","_k","reverse","v","format","toString","uid","_uid","uniq","uniqueId","prefix","idCounter","langx","PGLISTENERS","Symbol","deepEq","SymbolProto","aStack","bStack","className","valueOf","areArrays","aCtor","bCtor","f1","extendClass","options","proto","_super","superclass","noOverrided","_constructor","superFn","tmp","overrided","ret","get","defineProperty","serialMixins","mixins","clss","cls","clsMixines","mergeMixins","newCtor","xtor","Function","create","__proto__","__mixin__","createClass","parent","innerParent","init","klassName","__mixins__","partial","delegate","TMP","getAbsoluteUrl","document","createElement","class2type","Deferred","self","p","promise","Promise","resolve","reject","_resolve","_reject","added","state","isResolved","isRejected","then","onResolved","onRejected","onProgress","progress","__ctx__","always","handler","done","fail","pipe","resolveWith","_resolved","listener","error","reason","rejectWith","_rejected","errback","progback","all","first","race","when","valueOrPromise","receivedPromise","err","d","data","immediate","Evented","on","events","selector","ctx","one","_hub","trigger","eventName","listeners","len","reCompact","listened","event","evtArr","_events","listenTo","listening","listeningTo","_listeningTo","listeningEvents","listeningEvent","listenToOnce","off","evts","liveEvents","unlistenTo","Stateful","attributes","cid","cidPrefix","collection","set","changed","validationError","idAttribute","toJSON","attr","val","_validate","unset","silent","changes","changing","_changing","_previousAttributes","current","prev","_pending","clear","hasChanged","changedAttributes","diff","old","previousAttributes","isNew","isValid","validate","SimpleQueryEngine","query","arr","cache","buildFn","execute","sortSet","sort","aValue","attribute","bValue","descending","start","count","total","Infinity","queryObject","required","matches","QueryResults","addIterativeMethod","method","isPromise","async","parallel","rets","func","series","waterful","ArrayStore","queryEngine","idProperty","getIdentity","put","Math","random","overwrite","add","setData","identifier","Xhr","mimeToDataType","mime","htmlType","jsonType","scriptTypeRE","xmlTypeRE","appendQuery","serializeData","processData","param","traditional","toUpperCase","serialize","scope","t","hash","jsonpID","rscript","blankRE","XhrDefaultOptions","beforeSend","success","complete","global","accepts","script","json","xml","html","text","crossDomain","xhrFields","withCredentials","escape","_request","xhr","XMLHttpRequest","dataType","handleAs","mimeType","headers","isFormData","FormData","basicAuthorizationToken","user","password","deferred","contentType","overrideMimeType","finish","onloadend","onabort","onprogress","ontimeout","status","getResponseHeader","responseText","eval","responseXML","Blob","xhrObj","response","reponse","statusText","evt","open","hdr","setRequestHeader","send","abort","request","post","patch","del","defaultOptions","Restful","getBaseUrl","baseEndpoint","baseUrl","server","basePath","_head","_get","_post","verb","_put","_delete","_patch","retrieve","update","delete","camelCase","n","klass","lowerFirst","charAt","returnTrue","returnFalse","serializeValue","stringify","upperFirst","URL","webkitURL","math","Geometry","Point","x","y","move","dx","dy","notEqual","equal","fromString","s","fromPlain","o","fromArray","Zero","Direction","left","top","right","bottom","Arrow","bounds","box","width","height","direction","leftTop","leftBottom","rightTop","rightBottom","containPoint","Circle","cx","r","cy","Ellipse","rx","ry","Line","min","x1","x2","y1","y2","abs","startPoint","endPointer","Polyline","points","bbox","PolyStar","radius","sides","pointSize","angle","Size","toArray","toPlain","w","h","Rect","size","isEmpty","isIntersect","width2","height2","width1","height1","intersect","unite","max","DEG_TO_RAD","PI","_degToRadCache","degToRad","degree","Matrix","TransformMatrix","_multiplyPoint","m11","m21","m12","m22","alpha","shadow","compositeOperation","multiplyPoint","multiplyRectangle","rect","isIdentity","p0","p1","p2","p3","minx","miny","maxx","maxy","prepend","tx1","a1","c1","append","b1","d1","prependMatrix","matrix","prependProperties","appendMatrix","appendProperties","prependTransform","scaleX","scaleY","rotation","skewX","skewY","regX","regY","cos","sin","appendTransform","rotate","skew","scale","translate","identity","invert","decompose","sqrt","atan2","reinitialize","_initialize","multiply","mtx","rotateg","tan","skewXg","skewYg","reflect","a2","b2","n2","xx","xy","yx","yy","project","_sandwich","scaleAt","c","rotateAt","rotategAt","skewXAt","skewXgAt","skewYAt","skewYgAt","Transform","MatrixTransform","point","transformBounds","initialize","RotateTransform","centerX","centerY","ScaleTransform","Class","SkewTransform","TranslateTransform","main"],"mappings":"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","file":"../skylark-utils-math-all.js","sourcesContent":["define('skylark-langx/skylark',[], function() {\r\n    var skylark = {\r\n\r\n    };\r\n    return skylark;\r\n});\r\n\ndefine('skylark-utils/skylark',[\"skylark-langx/skylark\"], function(skylark) {\r\n    return skylark;\r\n});\r\n\ndefine('skylark-langx/langx',[\"./skylark\"], function(skylark) {\r\n    \"use strict\";\r\n    var toString = {}.toString,\r\n        concat = Array.prototype.concat,\r\n        indexOf = Array.prototype.indexOf,\r\n        slice = Array.prototype.slice,\r\n        filter = Array.prototype.filter,\r\n        hasOwnProperty = Object.prototype.hasOwnProperty;\r\n\r\n\r\n    var  PGLISTENERS = Symbol ? Symbol() : '__pglisteners';\r\n\r\n    // An internal function for creating assigner functions.\r\n    function createAssigner(keysFunc, defaults) {\r\n        return function(obj) {\r\n          var length = arguments.length;\r\n          if (defaults) obj = Object(obj);\r\n          if (length < 2 || obj == null) return obj;\r\n          for (var index = 1; index < length; index++) {\r\n            var source = arguments[index],\r\n                keys = keysFunc(source),\r\n                l = keys.length;\r\n            for (var i = 0; i < l; i++) {\r\n              var key = keys[i];\r\n              if (!defaults || obj[key] === void 0) obj[key] = source[key];\r\n            }\r\n          }\r\n          return obj;\r\n       };\r\n    }\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    var eq, deepEq;\r\n    var SymbolProto = typeof Symbol !== 'undefined' ? Symbol.prototype : null;\r\n\r\n    eq = function(a, b, aStack, bStack) {\r\n        // Identical objects are equal. `0 === -0`, but they aren't identical.\r\n        // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\r\n        if (a === b) return a !== 0 || 1 / a === 1 / b;\r\n        // `null` or `undefined` only equal to itself (strict comparison).\r\n        if (a == null || b == null) return false;\r\n        // `NaN`s are equivalent, but non-reflexive.\r\n        if (a !== a) return b !== b;\r\n        // Exhaust primitive checks\r\n        var type = typeof a;\r\n        if (type !== 'function' && type !== 'object' && typeof b != 'object') return false;\r\n        return deepEq(a, b, aStack, bStack);\r\n    };\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    deepEq = function(a, b, aStack, bStack) {\r\n        // Unwrap any wrapped objects.\r\n        //if (a instanceof _) a = a._wrapped;\r\n        //if (b instanceof _) b = b._wrapped;\r\n        // Compare `[[Class]]` names.\r\n        var className = toString.call(a);\r\n        if (className !== toString.call(b)) return false;\r\n        switch (className) {\r\n            // Strings, numbers, regular expressions, dates, and booleans are compared by value.\r\n            case '[object RegExp]':\r\n            // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\r\n            case '[object String]':\r\n                // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\r\n                // equivalent to `new String(\"5\")`.\r\n                return '' + a === '' + b;\r\n            case '[object Number]':\r\n                // `NaN`s are equivalent, but non-reflexive.\r\n                // Object(NaN) is equivalent to NaN.\r\n                if (+a !== +a) return +b !== +b;\r\n                // An `egal` comparison is performed for other numeric values.\r\n                return +a === 0 ? 1 / +a === 1 / b : +a === +b;\r\n            case '[object Date]':\r\n            case '[object Boolean]':\r\n                // Coerce dates and booleans to numeric primitive values. Dates are compared by their\r\n                // millisecond representations. Note that invalid dates with millisecond representations\r\n                // of `NaN` are not equivalent.\r\n                return +a === +b;\r\n            case '[object Symbol]':\r\n                return SymbolProto.valueOf.call(a) === SymbolProto.valueOf.call(b);\r\n        }\r\n\r\n        var areArrays = className === '[object Array]';\r\n        if (!areArrays) {\r\n            if (typeof a != 'object' || typeof b != 'object') return false;\r\n            // Objects with different constructors are not equivalent, but `Object`s or `Array`s\r\n            // from different frames are.\r\n            var aCtor = a.constructor, bCtor = b.constructor;\r\n            if (aCtor !== bCtor && !(isFunction(aCtor) && aCtor instanceof aCtor &&\r\n                               isFunction(bCtor) && bCtor instanceof bCtor)\r\n                          && ('constructor' in a && 'constructor' in b)) {\r\n                return false;\r\n            }\r\n        }\r\n        // Assume equality for cyclic structures. The algorithm for detecting cyclic\r\n        // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\r\n\r\n        // Initializing stack of traversed objects.\r\n        // It's done here since we only need them for objects and arrays comparison.\r\n        aStack = aStack || [];\r\n        bStack = bStack || [];\r\n        var length = aStack.length;\r\n        while (length--) {\r\n            // Linear search. Performance is inversely proportional to the number of\r\n            // unique nested structures.\r\n            if (aStack[length] === a) return bStack[length] === b;\r\n        }\r\n\r\n        // Add the first object to the stack of traversed objects.\r\n        aStack.push(a);\r\n        bStack.push(b);\r\n\r\n        // Recursively compare objects and arrays.\r\n        if (areArrays) {\r\n            // Compare array lengths to determine if a deep comparison is necessary.\r\n            length = a.length;\r\n            if (length !== b.length) return false;\r\n            // Deep compare the contents, ignoring non-numeric properties.\r\n            while (length--) {\r\n                if (!eq(a[length], b[length], aStack, bStack)) return false;\r\n            }\r\n        } else {\r\n            // Deep compare objects.\r\n            var keys = Object.keys(a), key;\r\n            length = keys.length;\r\n            // Ensure that both objects contain the same number of properties before comparing deep equality.\r\n            if (Object.keys(b).length !== length) return false;\r\n            while (length--) {\r\n                // Deep compare each member\r\n                key = keys[length];\r\n                if (!(b[key]!==undefined && eq(a[key], b[key], aStack, bStack))) return false;\r\n            }\r\n        }\r\n        // Remove the first object from the stack of traversed objects.\r\n        aStack.pop();\r\n        bStack.pop();\r\n        return true;\r\n    };\r\n\r\n    var undefined, nextId = 0;\r\n    function advise(dispatcher, type, advice, receiveArguments){\r\n        var previous = dispatcher[type];\r\n        var around = type == \"around\";\r\n        var signal;\r\n        if(around){\r\n            var advised = advice(function(){\r\n                return previous.advice(this, arguments);\r\n            });\r\n            signal = {\r\n                remove: function(){\r\n                    if(advised){\r\n                        advised = dispatcher = advice = null;\r\n                    }\r\n                },\r\n                advice: function(target, args){\r\n                    return advised ?\r\n                        advised.apply(target, args) :  // called the advised function\r\n                        previous.advice(target, args); // cancelled, skip to next one\r\n                }\r\n            };\r\n        }else{\r\n            // create the remove handler\r\n            signal = {\r\n                remove: function(){\r\n                    if(signal.advice){\r\n                        var previous = signal.previous;\r\n                        var next = signal.next;\r\n                        if(!next && !previous){\r\n                            delete dispatcher[type];\r\n                        }else{\r\n                            if(previous){\r\n                                previous.next = next;\r\n                            }else{\r\n                                dispatcher[type] = next;\r\n                            }\r\n                            if(next){\r\n                                next.previous = previous;\r\n                            }\r\n                        }\r\n\r\n                        // remove the advice to signal that this signal has been removed\r\n                        dispatcher = advice = signal.advice = null;\r\n                    }\r\n                },\r\n                id: nextId++,\r\n                advice: advice,\r\n                receiveArguments: receiveArguments\r\n            };\r\n        }\r\n        if(previous && !around){\r\n            if(type == \"after\"){\r\n                // add the listener to the end of the list\r\n                // note that we had to change this loop a little bit to workaround a bizarre IE10 JIT bug\r\n                while(previous.next && (previous = previous.next)){}\r\n                previous.next = signal;\r\n                signal.previous = previous;\r\n            }else if(type == \"before\"){\r\n                // add to beginning\r\n                dispatcher[type] = signal;\r\n                signal.next = previous;\r\n                previous.previous = signal;\r\n            }\r\n        }else{\r\n            // around or first one just replaces\r\n            dispatcher[type] = signal;\r\n        }\r\n        return signal;\r\n    }\r\n    function aspect(type){\r\n        return function(target, methodName, advice, receiveArguments){\r\n            var existing = target[methodName], dispatcher;\r\n            if(!existing || existing.target != target){\r\n                // no dispatcher in place\r\n                target[methodName] = dispatcher = function(){\r\n                    var executionId = nextId;\r\n                    // before advice\r\n                    var args = arguments;\r\n                    var before = dispatcher.before;\r\n                    while(before){\r\n                        args = before.advice.apply(this, args) || args;\r\n                        before = before.next;\r\n                    }\r\n                    // around advice\r\n                    if(dispatcher.around){\r\n                        var results = dispatcher.around.advice(this, args);\r\n                    }\r\n                    // after advice\r\n                    var after = dispatcher.after;\r\n                    while(after && after.id < executionId){\r\n                        if(after.receiveArguments){\r\n                            var newResults = after.advice.apply(this, args);\r\n                            // change the return value only if a new value was returned\r\n                            results = newResults === undefined ? results : newResults;\r\n                        }else{\r\n                            results = after.advice.call(this, results, args);\r\n                        }\r\n                        after = after.next;\r\n                    }\r\n                    return results;\r\n                };\r\n                if(existing){\r\n                    dispatcher.around = {advice: function(target, args){\r\n                        return existing.apply(target, args);\r\n                    }};\r\n                }\r\n                dispatcher.target = target;\r\n            }\r\n            var results = advise((dispatcher || existing), type, advice, receiveArguments);\r\n            advice = null;\r\n            return results;\r\n        };\r\n    }\r\n\r\n    var f1 = function() {\r\n        function extendClass(ctor, props, options) {\r\n            // Copy the properties to the prototype of the class.\r\n            var proto = ctor.prototype,\r\n                _super = ctor.superclass.prototype,\r\n                noOverrided = options && options.noOverrided;\r\n\r\n            for (var name in props) {\r\n                if (name === \"constructor\") {\r\n                    continue;\r\n                }\r\n\r\n                // Check if we're overwriting an existing function\r\n                var prop = props[name];\r\n                if (typeof props[name] == \"function\") {\r\n                    proto[name] =  !prop._constructor && !noOverrided && typeof _super[name] == \"function\" ?\r\n                          (function(name, fn, superFn) {\r\n                            return function() {\r\n                                var tmp = this.overrided;\r\n\r\n                                // Add a new ._super() method that is the same method\r\n                                // but on the super-class\r\n                                this.overrided = superFn;\r\n\r\n                                // The method only need to be bound temporarily, so we\r\n                                // remove it when we're done executing\r\n                                var ret = fn.apply(this, arguments);\r\n\r\n                                this.overrided = tmp;\r\n\r\n                                return ret;\r\n                            };\r\n                        })(name, prop, _super[name]) :\r\n                        prop;\r\n                } else if (typeof prop == \"object\" && prop!==null && (prop.get || prop.value !== undefined)) {\r\n                    Object.defineProperty(proto,name,prop);\r\n                } else {\r\n                    proto[name] = prop;\r\n                }\r\n            }\r\n            return ctor;\r\n        }\r\n\r\n        function serialMixins(ctor,mixins) {\r\n            var result = [];\r\n\r\n            mixins.forEach(function(mixin){\r\n                if (has(mixin,\"__mixins__\")) {\r\n                     throw new Error(\"nested mixins\");\r\n                }\r\n                var clss = [];\r\n                while (mixin) {\r\n                    clss.unshift(mixin);\r\n                    mixin = mixin.superclass;\r\n                }\r\n                result = result.concat(clss);\r\n            });\r\n\r\n            result = uniq(result);\r\n\r\n            result = result.filter(function(mixin){\r\n                var cls = ctor;\r\n                while (cls) {\r\n                    if (mixin === cls) {\r\n                        return false;\r\n                    }\r\n                    if (has(cls,\"__mixins__\")) {\r\n                        var clsMixines = cls[\"__mixins__\"];\r\n                        for (var i=0; i<clsMixines.length;i++) {\r\n                            if (clsMixines[i]===mixin) {\r\n                                return false;\r\n                            }\r\n                        }\r\n                    }\r\n                    cls = cls.superclass;\r\n                }\r\n                return true;\r\n            });\r\n\r\n            if (result.length>0) {\r\n                return result;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        function mergeMixins(ctor,mixins) {\r\n            var newCtor =ctor;\r\n            for (var i=0;i<mixins.length;i++) {\r\n                var xtor = new Function();\r\n                xtor.prototype = Object.create(newCtor.prototype);\r\n                xtor.__proto__ = newCtor;\r\n                xtor.superclass = null;\r\n                mixin(xtor.prototype,mixins[i].prototype);\r\n                xtor.prototype.__mixin__ = mixins[i];\r\n                newCtor = xtor;\r\n            }\r\n\r\n            return newCtor;\r\n        }\r\n\r\n        return function createClass(props, parent, mixins,options) {\r\n            if (isArray(parent)) {\r\n                options = mixins;\r\n                mixins = parent;\r\n                parent = null;\r\n            }\r\n            parent = parent || Object;\r\n\r\n            if (isDefined(mixins) && !isArray(mixins)) {\r\n                options = mixins;\r\n                mixins = false;\r\n            }\r\n\r\n            var innerParent = parent;\r\n\r\n            if (mixins) {\r\n                mixins = serialMixins(innerParent,mixins);\r\n            }\r\n\r\n            if (mixins) {\r\n                innerParent = mergeMixins(innerParent,mixins);\r\n            }\r\n\r\n\r\n            var _constructor = props.constructor;\r\n            if (_constructor === Object) {\r\n                _constructor = function() {\r\n                    if (this.init) {\r\n                        return this.init.apply(this, arguments);\r\n                    }\r\n                };\r\n            };\r\n\r\n            var klassName = props.klassName || \"\",\r\n                ctor = new Function(\r\n                    \"return function \" + klassName + \"() {\" +\r\n                    \"var inst = this,\" +\r\n                    \" ctor = arguments.callee;\" +\r\n                    \"if (!(inst instanceof ctor)) {\" +\r\n                    \"inst = Object.create(ctor.prototype);\" +\r\n                    \"}\" +\r\n                    \"return ctor._constructor.apply(inst, arguments) || inst;\" + \r\n                    \"}\"\r\n                )();\r\n\r\n\r\n            ctor._constructor = _constructor;\r\n            // Populate our constructed prototype object\r\n            ctor.prototype = Object.create(innerParent.prototype);\r\n\r\n            // Enforce the constructor to be what we expect\r\n            ctor.prototype.constructor = ctor;\r\n            ctor.superclass = parent;\r\n\r\n            // And make this class extendable\r\n            ctor.__proto__ = innerParent;\r\n\r\n            if (mixins) {\r\n                ctor.__mixins__ = mixins;\r\n            }\r\n\r\n            if (!ctor.partial) {\r\n                ctor.partial = function(props, options) {\r\n                    return extendClass(this, props, options);\r\n                };\r\n            }\r\n            if (!ctor.inherit) {\r\n                ctor.inherit = function(props, mixins,options) {\r\n                    return createClass(props, this, mixins,options);\r\n                };\r\n            }\r\n\r\n            ctor.partial(props, options);\r\n\r\n            return ctor;\r\n        };\r\n    }\r\n\r\n    var createClass = f1();\r\n\r\n\r\n    // Retrieve all the property names of an object.\r\n    function allKeys(obj) {\r\n        if (!isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function createEvent(type, props) {\r\n        var e = new CustomEvent(type, props);\r\n\r\n        return safeMixin(e, props);\r\n    }\r\n    \r\n    function debounce(fn, wait) {\r\n        var timeout,\r\n            args,\r\n            later = function() {\r\n                fn.apply(null, args);\r\n            };\r\n\r\n        return function() {\r\n            args = arguments;\r\n            clearTimeout(timeout);\r\n            timeout = setTimeout(later, wait);\r\n        };\r\n    }\r\n\r\n    var delegate = (function() {\r\n        // boodman/crockford delegation w/ cornford optimization\r\n        function TMP() {}\r\n        return function(obj, props) {\r\n            TMP.prototype = obj;\r\n            var tmp = new TMP();\r\n            TMP.prototype = null;\r\n            if (props) {\r\n                mixin(tmp, props);\r\n            }\r\n            return tmp; // Object\r\n        };\r\n    })();\r\n\r\n\r\n    // Retrieve the values of an object's properties.\r\n    function values(obj) {\r\n        var keys = _.keys(obj);\r\n        var length = keys.length;\r\n        var values = Array(length);\r\n        for (var i = 0; i < length; i++) {\r\n            values[i] = obj[keys[i]];\r\n        }\r\n        return values;\r\n    }\r\n    \r\n    function clone( /*anything*/ src,checkCloneMethod) {\r\n        var copy;\r\n        if (src === undefined || src === null) {\r\n            copy = src;\r\n        } else if (checkCloneMethod && src.clone) {\r\n            copy = src.clone();\r\n        } else if (isArray(src)) {\r\n            copy = [];\r\n            for (var i = 0; i < src.length; i++) {\r\n                copy.push(clone(src[i]));\r\n            }\r\n        } else if (isPlainObject(src)) {\r\n            copy = {};\r\n            for (var key in src) {\r\n                copy[key] = clone(src[key]);\r\n            }\r\n        } else {\r\n            copy = src;\r\n        }\r\n\r\n        return copy;\r\n\r\n    }\r\n\r\n    function compact(array) {\r\n        return filter.call(array, function(item) {\r\n            return item != null;\r\n        });\r\n    }\r\n\r\n    function dasherize(str) {\r\n        return str.replace(/::/g, '/')\r\n            .replace(/([A-Z]+)([A-Z][a-z])/g, '$1_$2')\r\n            .replace(/([a-z\\d])([A-Z])/g, '$1_$2')\r\n            .replace(/_/g, '-')\r\n            .toLowerCase();\r\n    }\r\n\r\n    function deserializeValue(value) {\r\n        try {\r\n            return value ?\r\n                value == \"true\" ||\r\n                (value == \"false\" ? false :\r\n                    value == \"null\" ? null :\r\n                    +value + \"\" == value ? +value :\r\n                    /^[\\[\\{]/.test(value) ? JSON.parse(value) :\r\n                    value) : value;\r\n        } catch (e) {\r\n            return value;\r\n        }\r\n    }\r\n\r\n    function each(obj, callback) {\r\n        var length, key, i, undef, value;\r\n\r\n        if (obj) {\r\n            length = obj.length;\r\n\r\n            if (length === undef) {\r\n                // Loop object items\r\n                for (key in obj) {\r\n                    if (obj.hasOwnProperty(key)) {\r\n                        value = obj[key];\r\n                        if (callback.call(value, key, value) === false) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                // Loop array items\r\n                for (i = 0; i < length; i++) {\r\n                    value = obj[i];\r\n                    if (callback.call(value, i, value) === false) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function flatten(array) {\r\n        if (isArrayLike(array)) {\r\n            var result = [];\r\n            for (var i = 0; i < array.length; i++) {\r\n                var item = array[i];\r\n                if (isArrayLike(item)) {\r\n                    for (var j = 0; j < item.length; j++) {\r\n                        result.push(item[j]);\r\n                    }\r\n                } else {\r\n                    result.push(item);\r\n                }\r\n            }\r\n            return result;\r\n        } else {\r\n            return array;\r\n        }\r\n        //return array.length > 0 ? concat.apply([], array) : array;\r\n    }\r\n\r\n    function funcArg(context, arg, idx, payload) {\r\n        return isFunction(arg) ? arg.call(context, idx, payload) : arg;\r\n    }\r\n\r\n    var getAbsoluteUrl = (function() {\r\n        var a;\r\n\r\n        return function(url) {\r\n            if (!a) a = document.createElement('a');\r\n            a.href = url;\r\n\r\n            return a.href;\r\n        };\r\n    })();\r\n\r\n    function getQueryParams(url) {\r\n        var url = url || window.location.href,\r\n            segs = url.split(\"?\"),\r\n            params = {};\r\n\r\n        if (segs.length > 1) {\r\n            segs[1].split(\"&\").forEach(function(queryParam) {\r\n                var nv = queryParam.split('=');\r\n                params[nv[0]] = nv[1];\r\n            });\r\n        }\r\n        return params;\r\n    }\r\n\r\n    function grep(array, callback) {\r\n        var out = [];\r\n\r\n        each(array, function(i, item) {\r\n            if (callback(item, i)) {\r\n                out.push(item);\r\n            }\r\n        });\r\n\r\n        return out;\r\n    }\r\n\r\n\r\n    function has(obj, path) {\r\n        if (!isArray(path)) {\r\n            return obj != null && hasOwnProperty.call(obj, path);\r\n        }\r\n        var length = path.length;\r\n        for (var i = 0; i < length; i++) {\r\n            var key = path[i];\r\n            if (obj == null || !hasOwnProperty.call(obj, key)) {\r\n                return false;\r\n            }\r\n            obj = obj[key];\r\n        }\r\n        return !!length;\r\n    }\r\n\r\n    function inArray(item, array) {\r\n        if (!array) {\r\n            return -1;\r\n        }\r\n        var i;\r\n\r\n        if (array.indexOf) {\r\n            return array.indexOf(item);\r\n        }\r\n\r\n        i = array.length;\r\n        while (i--) {\r\n            if (array[i] === item) {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        return -1;\r\n    }\r\n\r\n    function inherit(ctor, base) {\r\n        var f = function() {};\r\n        f.prototype = base.prototype;\r\n\r\n        ctor.prototype = new f();\r\n    }\r\n\r\n    function isArray(object) {\r\n        return object && object.constructor === Array;\r\n    }\r\n\r\n    function isArrayLike(obj) {\r\n        return !isString(obj) && !isHtmlNode(obj) && typeof obj.length == 'number' && !isFunction(obj);\r\n    }\r\n\r\n    function isBoolean(obj) {\r\n        return typeof(obj) === \"boolean\";\r\n    }\r\n\r\n    function isDocument(obj) {\r\n        return obj != null && obj.nodeType == obj.DOCUMENT_NODE;\r\n    }\r\n\r\n\r\n\r\n  // Perform a deep comparison to check if two objects are equal.\r\n    function isEqual(a, b) {\r\n        return eq(a, b);\r\n    }\r\n\r\n    function isFunction(value) {\r\n        return type(value) == \"function\";\r\n    }\r\n\r\n    function isObject(obj) {\r\n        return type(obj) == \"object\";\r\n    }\r\n\r\n    function isPlainObject(obj) {\r\n        return isObject(obj) && !isWindow(obj) && Object.getPrototypeOf(obj) == Object.prototype;\r\n    }\r\n\r\n    function isString(obj) {\r\n        return typeof obj === 'string';\r\n    }\r\n\r\n    function isWindow(obj) {\r\n        return obj && obj == obj.window;\r\n    }\r\n\r\n    function isDefined(obj) {\r\n        return typeof obj !== 'undefined';\r\n    }\r\n\r\n    function isHtmlNode(obj) {\r\n        return obj && (obj instanceof Node);\r\n    }\r\n\r\n    function isInstanceOf( /*Object*/ value, /*Type*/ type) {\r\n        //Tests whether the value is an instance of a type.\r\n        if (value === undefined) {\r\n            return false;\r\n        } else if (value === null || type == Object) {\r\n            return true;\r\n        } else if (typeof value === \"number\") {\r\n            return type === Number;\r\n        } else if (typeof value === \"string\") {\r\n            return type === String;\r\n        } else if (typeof value === \"boolean\") {\r\n            return type === Boolean;\r\n        } else if (typeof value === \"string\") {\r\n            return type === String;\r\n        } else {\r\n            return (value instanceof type) || (value && value.isInstanceOf ? value.isInstanceOf(type) : false);\r\n        }\r\n    }\r\n\r\n    function isNumber(obj) {\r\n        return typeof obj == 'number';\r\n    }\r\n\r\n    function isSameOrigin(href) {\r\n        if (href) {\r\n            var origin = location.protocol + '//' + location.hostname;\r\n            if (location.port) {\r\n                origin += ':' + location.port;\r\n            }\r\n            return href.startsWith(origin);\r\n        }\r\n    }\r\n\r\n\r\n    function isEmptyObject(obj) {\r\n        var name;\r\n        for (name in obj) {\r\n            if (obj[name] !== null) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    // Returns whether an object has a given set of `key:value` pairs.\r\n    function isMatch(object, attrs) {\r\n        var keys = keys(attrs), length = keys.length;\r\n        if (object == null) return !length;\r\n        var obj = Object(object);\r\n        for (var i = 0; i < length; i++) {\r\n          var key = keys[i];\r\n          if (attrs[key] !== obj[key] || !(key in obj)) return false;\r\n        }\r\n        return true;\r\n    }    \r\n\r\n    // Retrieve the names of an object's own properties.\r\n    // Delegates to **ECMAScript 5**'s native `Object.keys`.\r\n    function keys(obj) {\r\n        if (isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) if (has(obj, key)) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function makeArray(obj, offset, startWith) {\r\n       if (isArrayLike(obj) ) {\r\n        return (startWith || []).concat(Array.prototype.slice.call(obj, offset || 0));\r\n      }\r\n\r\n      // array of single index\r\n      return [ obj ];             \r\n    }\r\n\r\n\r\n\r\n    function map(elements, callback) {\r\n        var value, values = [],\r\n            i, key\r\n        if (isArrayLike(elements))\r\n            for (i = 0; i < elements.length; i++) {\r\n                value = callback.call(elements[i], elements[i], i);\r\n                if (value != null) values.push(value)\r\n            }\r\n        else\r\n            for (key in elements) {\r\n                value = callback.call(elements[key], elements[key], key);\r\n                if (value != null) values.push(value)\r\n            }\r\n        return flatten(values)\r\n    }\r\n\r\n    function defer(fn) {\r\n        if (requestAnimationFrame) {\r\n            requestAnimationFrame(fn);\r\n        } else {\r\n            setTimeoutout(fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function noop() {\r\n    }\r\n\r\n    function proxy(fn, context) {\r\n        var args = (2 in arguments) && slice.call(arguments, 2)\r\n        if (isFunction(fn)) {\r\n            var proxyFn = function() {\r\n                return fn.apply(context, args ? args.concat(slice.call(arguments)) : arguments);\r\n            }\r\n            return proxyFn;\r\n        } else if (isString(context)) {\r\n            if (args) {\r\n                args.unshift(fn[context], fn)\r\n                return proxy.apply(null, args)\r\n            } else {\r\n                return proxy(fn[context], fn);\r\n            }\r\n        } else {\r\n            throw new TypeError(\"expected function\");\r\n        }\r\n    }\r\n\r\n\r\n    function toPixel(value) {\r\n        // style values can be floats, client code may want\r\n        // to round for integer pixels.\r\n        return parseFloat(value) || 0;\r\n    }\r\n\r\n    var type = (function() {\r\n        var class2type = {};\r\n\r\n        // Populate the class2type map\r\n        each(\"Boolean Number String Function Array Date RegExp Object Error\".split(\" \"), function(i, name) {\r\n            class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\r\n        });\r\n\r\n        return function type(obj) {\r\n            return obj == null ? String(obj) :\r\n                class2type[toString.call(obj)] || \"object\";\r\n        };\r\n    })();\r\n\r\n    function trim(str) {\r\n        return str == null ? \"\" : String.prototype.trim.call(str);\r\n    }\r\n\r\n    function removeItem(items, item) {\r\n        if (isArray(items)) {\r\n            var idx = items.indexOf(item);\r\n            if (idx != -1) {\r\n                items.splice(idx, 1);\r\n            }\r\n        } else if (isPlainObject(items)) {\r\n            for (var key in items) {\r\n                if (items[key] == item) {\r\n                    delete items[key];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function _mixin(target, source, deep, safe) {\r\n        for (var key in source) {\r\n            if (!source.hasOwnProperty(key)) {\r\n                continue;\r\n            }\r\n            if (safe && target[key] !== undefined) {\r\n                continue;\r\n            }\r\n            if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\r\n                if (isPlainObject(source[key]) && !isPlainObject(target[key])) {\r\n                    target[key] = {};\r\n                }\r\n                if (isArray(source[key]) && !isArray(target[key])) {\r\n                    target[key] = [];\r\n                }\r\n                _mixin(target[key], source[key], deep, safe);\r\n            } else if (source[key] !== undefined) {\r\n                target[key] = source[key]\r\n            }\r\n        }\r\n        return target;\r\n    }\r\n\r\n    function _parseMixinArgs(args) {\r\n        var params = slice.call(arguments, 0),\r\n            target = params.shift(),\r\n            deep = false;\r\n        if (isBoolean(params[params.length - 1])) {\r\n            deep = params.pop();\r\n        }\r\n\r\n        return {\r\n            target: target,\r\n            sources: params,\r\n            deep: deep\r\n        };\r\n    }\r\n\r\n    function mixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, false);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    function result(obj, path, fallback) {\r\n        if (!isArray(path)) {\r\n            path = [path]\r\n        };\r\n        var length = path.length;\r\n        if (!length) {\r\n          return isFunction(fallback) ? fallback.call(obj) : fallback;\r\n        }\r\n        for (var i = 0; i < length; i++) {\r\n          var prop = obj == null ? void 0 : obj[path[i]];\r\n          if (prop === void 0) {\r\n            prop = fallback;\r\n            i = length; // Ensure we don't continue iterating.\r\n          }\r\n          obj = isFunction(prop) ? prop.call(obj) : prop;\r\n        }\r\n\r\n        return obj;\r\n    }\r\n\r\n    function safeMixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, true);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    function substitute( /*String*/ template,\r\n        /*Object|Array*/\r\n        map,\r\n        /*Function?*/\r\n        transform,\r\n        /*Object?*/\r\n        thisObject) {\r\n        // summary:\r\n        //    Performs parameterized substitutions on a string. Throws an\r\n        //    exception if any parameter is unmatched.\r\n        // template:\r\n        //    a string with expressions in the form `${key}` to be replaced or\r\n        //    `${key:format}` which specifies a format function. keys are case-sensitive.\r\n        // map:\r\n        //    hash to search for substitutions\r\n        // transform:\r\n        //    a function to process all parameters before substitution takes\r\n\r\n\r\n        thisObject = thisObject || window;\r\n        transform = transform ?\r\n            proxy(thisObject, transform) : function(v) {\r\n                return v;\r\n            };\r\n\r\n        function getObject(key, map) {\r\n            if (key.match(/\\./)) {\r\n                var retVal,\r\n                    getValue = function(keys, obj) {\r\n                        var _k = keys.pop();\r\n                        if (_k) {\r\n                            if (!obj[_k]) return null;\r\n                            return getValue(keys, retVal = obj[_k]);\r\n                        } else {\r\n                            return retVal;\r\n                        }\r\n                    };\r\n                return getValue(key.split(\".\").reverse(), map);\r\n            } else {\r\n                return map[key];\r\n            }\r\n        }\r\n\r\n        return template.replace(/\\$\\{([^\\s\\:\\}]+)(?:\\:([^\\s\\:\\}]+))?\\}/g,\r\n            function(match, key, format) {\r\n                var value = getObject(key, map);\r\n                if (format) {\r\n                    value = getObject(format, thisObject).call(thisObject, value, key);\r\n                }\r\n                return transform(value, key).toString();\r\n            }); // String\r\n    }\r\n\r\n    var _uid = 1;\r\n\r\n    function uid(obj) {\r\n        return obj._uid || (obj._uid = _uid++);\r\n    }\r\n\r\n    function uniq(array) {\r\n        return filter.call(array, function(item, idx) {\r\n            return array.indexOf(item) == idx;\r\n        })\r\n    }\r\n\r\n    var idCounter = 0;\r\n    function uniqueId (prefix) {\r\n        var id = ++idCounter + '';\r\n        return prefix ? prefix + id : id;\r\n    }\r\n\r\n    var Deferred = function() {\r\n        var self = this,\r\n            p = this.promise = new Promise(function(resolve, reject) {\r\n                self._resolve = resolve;\r\n                self._reject = reject;\r\n            }),\r\n           added = {\r\n                state : function() {\r\n                    if (self.isResolved()) {\r\n                        return 'resolved';\r\n                    }\r\n                    if (self.isRejected()) {\r\n                        return 'rejected';\r\n                    }\r\n                    return 'pending';\r\n                },\r\n                then : function(onResolved,onRejected,onProgress) {\r\n                    if (onProgress) {\r\n                        this.progress(onProgress);\r\n                    }\r\n                    return mixin(Promise.prototype.then.call(this,\r\n                            onResolved && function(args) {\r\n                                if (args && args.__ctx__ !== undefined) {\r\n                                    return onResolved.apply(args.__ctx__,args);\r\n                                } else {\r\n                                    return onResolved(args);\r\n                                }\r\n                            },\r\n                            onRejected && function(args){\r\n                                if (args && args.__ctx__ !== undefined) {\r\n                                    return onRejected.apply(args.__ctx__,args);\r\n                                } else {\r\n                                    return onRejected(args);\r\n                                }\r\n                            }),added);\r\n                },\r\n                always: function(handler) {\r\n                    //this.done(handler);\r\n                    //this.fail(handler);\r\n                    this.then(handler,handler);\r\n                    return this;\r\n                },\r\n                done : function(handler) {\r\n                    return this.then(handler);\r\n                },\r\n                fail : function(handler) { \r\n                    //return mixin(Promise.prototype.catch.call(this,handler),added);\r\n                    return this.then(null,handler);\r\n                }, \r\n                progress : function(handler) {\r\n                    self[PGLISTENERS].push(handler);\r\n                    return this;\r\n                }\r\n\r\n            };\r\n\r\n        added.pipe = added.then;\r\n        mixin(p,added);\r\n\r\n        this[PGLISTENERS] = [];\r\n\r\n        //this.resolve = Deferred.prototype.resolve.bind(this);\r\n        //this.reject = Deferred.prototype.reject.bind(this);\r\n        //this.progress = Deferred.prototype.progress.bind(this);\r\n\r\n    };\r\n\r\n    Deferred.prototype.resolve = function(value) {\r\n        var args = slice.call(arguments);\r\n        return this.resolveWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.resolveWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._resolve(args);\r\n        this._resolved = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.progress = function(value) {\r\n        try {\r\n          return this[PGLISTENERS].forEach(function (listener) {\r\n            return listener(value);\r\n          });\r\n        } catch (error) {\r\n          this.reject(error);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.reject = function(reason) {\r\n        var args = slice.call(arguments);\r\n        return this.rejectWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.rejectWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._reject(args);\r\n        this._rejected = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.isResolved = function() {\r\n        return !!this._resolved;\r\n    };\r\n\r\n    Deferred.prototype.isRejected = function() {\r\n        return !!this._rejected;\r\n    };\r\n\r\n    Deferred.prototype.then = function(callback, errback, progback) {\r\n        var p = result(this,\"promise\");\r\n        return p.then(callback, errback, progback);\r\n    };\r\n\r\n    Deferred.prototype.done  = Deferred.prototype.then;\r\n\r\n    Deferred.all = function(array) {\r\n        return Promise.all(array);\r\n    };\r\n\r\n    Deferred.first = function(array) {\r\n        return Promise.race(array);\r\n    };\r\n\r\n\r\n    Deferred.when = function(valueOrPromise, callback, errback, progback) {\r\n        var receivedPromise = valueOrPromise && typeof valueOrPromise.then === \"function\";\r\n        var nativePromise = receivedPromise && valueOrPromise instanceof Promise;\r\n\r\n        if (!receivedPromise) {\r\n            if (arguments.length > 1) {\r\n                return callback ? callback(valueOrPromise) : valueOrPromise;\r\n            } else {\r\n                return new Deferred().resolve(valueOrPromise);\r\n            }\r\n//        } else if (!nativePromise) {\r\n//            var deferred = new Deferred(valueOrPromise.cancel);\r\n//            valueOrPromise.then(deferred.resolve, deferred.reject, deferred.progress);\r\n//            valueOrPromise = deferred.promise;\r\n        }\r\n\r\n        if (callback || errback || progback) {\r\n            return valueOrPromise.then(callback, errback, progback);\r\n        }\r\n        return valueOrPromise;\r\n    };\r\n\r\n    Deferred.reject = function(err) {\r\n        var d = new Deferred();\r\n        d.reject(err);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.resolve = function(data) {\r\n        var d = new Deferred();\r\n        d.resolve(data);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.immediate = Deferred.resolve;\r\n\r\n    var Evented = createClass({\r\n        on: function(events, selector, data, callback, ctx, /*used internally*/ one) {\r\n            var self = this,\r\n                _hub = this._hub || (this._hub = {});\r\n\r\n            if (isPlainObject(events)) {\r\n                ctx = callback;\r\n                each(events, function(type, fn) {\r\n                    self.on(type, selector, data, fn, ctx, one);\r\n                });\r\n                return this;\r\n            }\r\n\r\n            if (!isString(selector) && !isFunction(callback)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = selector;\r\n                selector = undefined;\r\n            }\r\n\r\n            if (isFunction(data)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(name) {\r\n                (_hub[name] || (_hub[name] = [])).push({\r\n                    fn: callback,\r\n                    selector: selector,\r\n                    data: data,\r\n                    ctx: ctx,\r\n                    one: one\r\n                });\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        one: function(events, selector, data, callback, ctx) {\r\n            return this.on(events, selector, data, callback, ctx, 1);\r\n        },\r\n\r\n        trigger: function(e /*,argument list*/ ) {\r\n            if (!this._hub) {\r\n                return this;\r\n            }\r\n\r\n            var self = this;\r\n\r\n            if (isString(e)) {\r\n                e = new CustomEvent(e);\r\n            }\r\n\r\n            Object.defineProperty(e,\"target\",{\r\n                value : this\r\n            });\r\n\r\n            var args = slice.call(arguments, 1);\r\n            if (isDefined(args)) {\r\n                args = [e].concat(args);\r\n            } else {\r\n                args = [e];\r\n            }\r\n            [e.type || e.name, \"all\"].forEach(function(eventName) {\r\n                var listeners = self._hub[eventName];\r\n                if (!listeners) {\r\n                    return;\r\n                }\r\n\r\n                var len = listeners.length,\r\n                    reCompact = false;\r\n\r\n                for (var i = 0; i < len; i++) {\r\n                    var listener = listeners[i];\r\n                    if (e.data) {\r\n                        if (listener.data) {\r\n                            e.data = mixin({}, listener.data, e.data);\r\n                        }\r\n                    } else {\r\n                        e.data = listener.data || null;\r\n                    }\r\n                    listener.fn.apply(listener.ctx, args);\r\n                    if (listener.one) {\r\n                        listeners[i] = null;\r\n                        reCompact = true;\r\n                    }\r\n                }\r\n\r\n                if (reCompact) {\r\n                    self._hub[eventName] = compact(listeners);\r\n                }\r\n\r\n            });\r\n            return this;\r\n        },\r\n\r\n        listened: function(event) {\r\n            var evtArr = ((this._hub || (this._events = {}))[event] || []);\r\n            return evtArr.length > 0;\r\n        },\r\n\r\n        listenTo: function(obj, event, callback, /*used internally*/ one) {\r\n            if (!obj) {\r\n                return this;\r\n            }\r\n\r\n            // Bind callbacks on obj,\r\n            if (isString(callback)) {\r\n                callback = this[callback];\r\n            }\r\n\r\n            if (one) {\r\n                obj.one(event, callback, this);\r\n            } else {\r\n                obj.on(event, callback, this);\r\n            }\r\n\r\n            //keep track of them on listening.\r\n            var listeningTo = this._listeningTo || (this._listeningTo = []),\r\n                listening;\r\n\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                if (listeningTo[i].obj == obj) {\r\n                    listening = listeningTo[i];\r\n                    break;\r\n                }\r\n            }\r\n            if (!listening) {\r\n                listeningTo.push(\r\n                    listening = {\r\n                        obj: obj,\r\n                        events: {}\r\n                    }\r\n                );\r\n            }\r\n            var listeningEvents = listening.events,\r\n                listeningEvent = listeningEvents[event] = listeningEvents[event] || [];\r\n            if (listeningEvent.indexOf(callback) == -1) {\r\n                listeningEvent.push(callback);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        listenToOnce: function(obj, event, callback) {\r\n            return this.listenTo(obj, event, callback, 1);\r\n        },\r\n\r\n        off: function(events, callback) {\r\n            var _hub = this._hub || (this._hub = {});\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(name) {\r\n                var evts = _hub[name];\r\n                var liveEvents = [];\r\n\r\n                if (evts && callback) {\r\n                    for (var i = 0, len = evts.length; i < len; i++) {\r\n                        if (evts[i].fn !== callback && evts[i].fn._ !== callback)\r\n                            liveEvents.push(evts[i]);\r\n                    }\r\n                }\r\n\r\n                if (liveEvents.length) {\r\n                    _hub[name] = liveEvents;\r\n                } else {\r\n                    delete _hub[name];\r\n                }\r\n            });\r\n\r\n            return this;\r\n        },\r\n        unlistenTo: function(obj, event, callback) {\r\n            var listeningTo = this._listeningTo;\r\n            if (!listeningTo) {\r\n                return this;\r\n            }\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                var listening = listeningTo[i];\r\n\r\n                if (obj && obj != listening.obj) {\r\n                    continue;\r\n                }\r\n\r\n                var listeningEvents = listening.events;\r\n                for (var eventName in listeningEvents) {\r\n                    if (event && event != eventName) {\r\n                        continue;\r\n                    }\r\n\r\n                    listeningEvent = listeningEvents[eventName];\r\n\r\n                    for (var j = 0; j < listeningEvent.length; j++) {\r\n                        if (!callback || callback == listeningEvent[i]) {\r\n                            listening.obj.off(eventName, listeningEvent[i], this);\r\n                            listeningEvent[i] = null;\r\n                        }\r\n                    }\r\n\r\n                    listeningEvent = listeningEvents[eventName] = compact(listeningEvent);\r\n\r\n                    if (isEmptyObject(listeningEvent)) {\r\n                        listeningEvents[eventName] = null;\r\n                    }\r\n\r\n                }\r\n\r\n                if (isEmptyObject(listeningEvents)) {\r\n                    listeningTo[i] = null;\r\n                }\r\n            }\r\n\r\n            listeningTo = this._listeningTo = compact(listeningTo);\r\n            if (isEmptyObject(listeningTo)) {\r\n                this._listeningTo = null;\r\n            }\r\n\r\n            return this;\r\n        }\r\n    });\r\n\r\n    var Stateful = Evented.inherit({\r\n        init : function(attributes, options) {\r\n            var attrs = attributes || {};\r\n            options || (options = {});\r\n            this.cid = uniqueId(this.cidPrefix);\r\n            this.attributes = {};\r\n            if (options.collection) this.collection = options.collection;\r\n            if (options.parse) attrs = this.parse(attrs, options) || {};\r\n            var defaults = result(this, 'defaults');\r\n            attrs = mixin({}, defaults, attrs);\r\n            this.set(attrs, options);\r\n            this.changed = {};\r\n        },\r\n\r\n        // A hash of attributes whose current and previous value differ.\r\n        changed: null,\r\n\r\n        // The value returned during the last failed validation.\r\n        validationError: null,\r\n\r\n        // The default name for the JSON `id` attribute is `\"id\"`. MongoDB and\r\n        // CouchDB users may want to set this to `\"_id\"`.\r\n        idAttribute: 'id',\r\n\r\n        // The prefix is used to create the client id which is used to identify models locally.\r\n        // You may want to override this if you're experiencing name clashes with model ids.\r\n        cidPrefix: 'c',\r\n\r\n\r\n        // Return a copy of the model's `attributes` object.\r\n        toJSON: function(options) {\r\n          return clone(this.attributes);\r\n        },\r\n\r\n\r\n        // Get the value of an attribute.\r\n        get: function(attr) {\r\n          return this.attributes[attr];\r\n        },\r\n\r\n        // Returns `true` if the attribute contains a value that is not null\r\n        // or undefined.\r\n        has: function(attr) {\r\n          return this.get(attr) != null;\r\n        },\r\n\r\n        // Set a hash of model attributes on the object, firing `\"change\"`. This is\r\n        // the core primitive operation of a model, updating the data and notifying\r\n        // anyone who needs to know about the change in state. The heart of the beast.\r\n        set: function(key, val, options) {\r\n          if (key == null) return this;\r\n\r\n          // Handle both `\"key\", value` and `{key: value}` -style arguments.\r\n          var attrs;\r\n          if (typeof key === 'object') {\r\n            attrs = key;\r\n            options = val;\r\n          } else {\r\n            (attrs = {})[key] = val;\r\n          }\r\n\r\n          options || (options = {});\r\n\r\n          // Run validation.\r\n          if (!this._validate(attrs, options)) return false;\r\n\r\n          // Extract attributes and options.\r\n          var unset      = options.unset;\r\n          var silent     = options.silent;\r\n          var changes    = [];\r\n          var changing   = this._changing;\r\n          this._changing = true;\r\n\r\n          if (!changing) {\r\n            this._previousAttributes = clone(this.attributes);\r\n            this.changed = {};\r\n          }\r\n\r\n          var current = this.attributes;\r\n          var changed = this.changed;\r\n          var prev    = this._previousAttributes;\r\n\r\n          // For each `set` attribute, update or delete the current value.\r\n          for (var attr in attrs) {\r\n            val = attrs[attr];\r\n            if (!isEqual(current[attr], val)) changes.push(attr);\r\n            if (!isEqual(prev[attr], val)) {\r\n              changed[attr] = val;\r\n            } else {\r\n              delete changed[attr];\r\n            }\r\n            unset ? delete current[attr] : current[attr] = val;\r\n          }\r\n\r\n          // Update the `id`.\r\n          if (this.idAttribute in attrs) this.id = this.get(this.idAttribute);\r\n\r\n          // Trigger all relevant attribute changes.\r\n          if (!silent) {\r\n            if (changes.length) this._pending = options;\r\n            for (var i = 0; i < changes.length; i++) {\r\n              this.trigger('change:' + changes[i], this, current[changes[i]], options);\r\n            }\r\n          }\r\n\r\n          // You might be wondering why there's a `while` loop here. Changes can\r\n          // be recursively nested within `\"change\"` events.\r\n          if (changing) return this;\r\n          if (!silent) {\r\n            while (this._pending) {\r\n              options = this._pending;\r\n              this._pending = false;\r\n              this.trigger('change', this, options);\r\n            }\r\n          }\r\n          this._pending = false;\r\n          this._changing = false;\r\n          return this;\r\n        },\r\n\r\n        // Remove an attribute from the model, firing `\"change\"`. `unset` is a noop\r\n        // if the attribute doesn't exist.\r\n        unset: function(attr, options) {\r\n          return this.set(attr, void 0, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Clear all attributes on the model, firing `\"change\"`.\r\n        clear: function(options) {\r\n          var attrs = {};\r\n          for (var key in this.attributes) attrs[key] = void 0;\r\n          return this.set(attrs, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Determine if the model has changed since the last `\"change\"` event.\r\n        // If you specify an attribute name, determine if that attribute has changed.\r\n        hasChanged: function(attr) {\r\n          if (attr == null) return !isEmptyObject(this.changed);\r\n          return this.changed[attr] !== undefined;\r\n        },\r\n\r\n        // Return an object containing all the attributes that have changed, or\r\n        // false if there are no changed attributes. Useful for determining what\r\n        // parts of a view need to be updated and/or what attributes need to be\r\n        // persisted to the server. Unset attributes will be set to undefined.\r\n        // You can also pass an attributes object to diff against the model,\r\n        // determining if there *would be* a change.\r\n        changedAttributes: function(diff) {\r\n          if (!diff) return this.hasChanged() ? clone(this.changed) : false;\r\n          var old = this._changing ? this._previousAttributes : this.attributes;\r\n          var changed = {};\r\n          for (var attr in diff) {\r\n            var val = diff[attr];\r\n            if (isEqual(old[attr], val)) continue;\r\n            changed[attr] = val;\r\n          }\r\n          return !isEmptyObject(changed) ? changed : false;\r\n        },\r\n\r\n        // Get the previous value of an attribute, recorded at the time the last\r\n        // `\"change\"` event was fired.\r\n        previous: function(attr) {\r\n          if (attr == null || !this._previousAttributes) return null;\r\n          return this._previousAttributes[attr];\r\n        },\r\n\r\n        // Get all of the attributes of the model at the time of the previous\r\n        // `\"change\"` event.\r\n        previousAttributes: function() {\r\n          return clone(this._previousAttributes);\r\n        },\r\n\r\n        // Create a new model with identical attributes to this one.\r\n        clone: function() {\r\n          return new this.constructor(this.attributes);\r\n        },\r\n\r\n        // A model is new if it has never been saved to the server, and lacks an id.\r\n        isNew: function() {\r\n          return !this.has(this.idAttribute);\r\n        },\r\n\r\n        // Check if the model is currently in a valid state.\r\n        isValid: function(options) {\r\n          return this._validate({}, mixin({}, options, {validate: true}));\r\n        },\r\n\r\n        // Run validation against the next complete set of model attributes,\r\n        // returning `true` if all is well. Otherwise, fire an `\"invalid\"` event.\r\n        _validate: function(attrs, options) {\r\n          if (!options.validate || !this.validate) return true;\r\n          attrs = mixin({}, this.attributes, attrs);\r\n          var error = this.validationError = this.validate(attrs, options) || null;\r\n          if (!error) return true;\r\n          this.trigger('invalid', this, error, mixin(options, {validationError: error}));\r\n          return false;\r\n        }\r\n    });\r\n\r\n    var SimpleQueryEngine = function(query, options){\r\n        // summary:\r\n        //      Simple query engine that matches using filter functions, named filter\r\n        //      functions or objects by name-value on a query object hash\r\n        //\r\n        // description:\r\n        //      The SimpleQueryEngine provides a way of getting a QueryResults through\r\n        //      the use of a simple object hash as a filter.  The hash will be used to\r\n        //      match properties on data objects with the corresponding value given. In\r\n        //      other words, only exact matches will be returned.\r\n        //\r\n        //      This function can be used as a template for more complex query engines;\r\n        //      for example, an engine can be created that accepts an object hash that\r\n        //      contains filtering functions, or a string that gets evaluated, etc.\r\n        //\r\n        //      When creating a new dojo.store, simply set the store's queryEngine\r\n        //      field as a reference to this function.\r\n        //\r\n        // query: Object\r\n        //      An object hash with fields that may match fields of items in the store.\r\n        //      Values in the hash will be compared by normal == operator, but regular expressions\r\n        //      or any object that provides a test() method are also supported and can be\r\n        //      used to match strings by more complex expressions\r\n        //      (and then the regex's or object's test() method will be used to match values).\r\n        //\r\n        // options: dojo/store/api/Store.QueryOptions?\r\n        //      An object that contains optional information such as sort, start, and count.\r\n        //\r\n        // returns: Function\r\n        //      A function that caches the passed query under the field \"matches\".  See any\r\n        //      of the \"query\" methods on dojo.stores.\r\n        //\r\n        // example:\r\n        //      Define a store with a reference to this engine, and set up a query method.\r\n        //\r\n        //  |   var myStore = function(options){\r\n        //  |       //  ...more properties here\r\n        //  |       this.queryEngine = SimpleQueryEngine;\r\n        //  |       //  define our query method\r\n        //  |       this.query = function(query, options){\r\n        //  |           return QueryResults(this.queryEngine(query, options)(this.data));\r\n        //  |       };\r\n        //  |   };\r\n\r\n        // create our matching query function\r\n        switch(typeof query){\r\n            default:\r\n                throw new Error(\"Can not query with a \" + typeof query);\r\n            case \"object\": case \"undefined\":\r\n                var queryObject = query;\r\n                query = function(object){\r\n                    for(var key in queryObject){\r\n                        var required = queryObject[key];\r\n                        if(required && required.test){\r\n                            // an object can provide a test method, which makes it work with regex\r\n                            if(!required.test(object[key], object)){\r\n                                return false;\r\n                            }\r\n                        }else if(required != object[key]){\r\n                            return false;\r\n                        }\r\n                    }\r\n                    return true;\r\n                };\r\n                break;\r\n            case \"string\":\r\n                // named query\r\n                if(!this[query]){\r\n                    throw new Error(\"No filter function \" + query + \" was found in store\");\r\n                }\r\n                query = this[query];\r\n                // fall through\r\n            case \"function\":\r\n                // fall through\r\n        }\r\n        \r\n        function filter(arr, callback, thisObject){\r\n            // summary:\r\n            //      Returns a new Array with those items from arr that match the\r\n            //      condition implemented by callback.\r\n            // arr: Array\r\n            //      the array to iterate over.\r\n            // callback: Function|String\r\n            //      a function that is invoked with three arguments (item,\r\n            //      index, array). The return of this function is expected to\r\n            //      be a boolean which determines whether the passed-in item\r\n            //      will be included in the returned array.\r\n            // thisObject: Object?\r\n            //      may be used to scope the call to callback\r\n            // returns: Array\r\n            // description:\r\n            //      This function corresponds to the JavaScript 1.6 Array.filter() method, with one difference: when\r\n            //      run over sparse arrays, this implementation passes the \"holes\" in the sparse array to\r\n            //      the callback function with a value of undefined. JavaScript 1.6's filter skips the holes in the sparse array.\r\n            //      For more details, see:\r\n            //      https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/filter\r\n            // example:\r\n            //  | // returns [2, 3, 4]\r\n            //  | array.filter([1, 2, 3, 4], function(item){ return item>1; });\r\n\r\n            // TODO: do we need \"Ctr\" here like in map()?\r\n            var i = 0, l = arr && arr.length || 0, out = [], value;\r\n            if(l && typeof arr == \"string\") arr = arr.split(\"\");\r\n            if(typeof callback == \"string\") callback = cache[callback] || buildFn(callback);\r\n            if(thisObject){\r\n                for(; i < l; ++i){\r\n                    value = arr[i];\r\n                    if(callback.call(thisObject, value, i, arr)){\r\n                        out.push(value);\r\n                    }\r\n                }\r\n            }else{\r\n                for(; i < l; ++i){\r\n                    value = arr[i];\r\n                    if(callback(value, i, arr)){\r\n                        out.push(value);\r\n                    }\r\n                }\r\n            }\r\n            return out; // Array\r\n        }\r\n\r\n        function execute(array){\r\n            // execute the whole query, first we filter\r\n            var results = filter(array, query);\r\n            // next we sort\r\n            var sortSet = options && options.sort;\r\n            if(sortSet){\r\n                results.sort(typeof sortSet == \"function\" ? sortSet : function(a, b){\r\n                    for(var sort, i=0; sort = sortSet[i]; i++){\r\n                        var aValue = a[sort.attribute];\r\n                        var bValue = b[sort.attribute];\r\n                        // valueOf enables proper comparison of dates\r\n                        aValue = aValue != null ? aValue.valueOf() : aValue;\r\n                        bValue = bValue != null ? bValue.valueOf() : bValue;\r\n                        if (aValue != bValue){\r\n                            // modified by lwf 2016/07/09\r\n                            //return !!sort.descending == (aValue == null || aValue > bValue) ? -1 : 1;\r\n                            return !!sort.descending == (aValue == null || aValue > bValue) ? -1 : 1;\r\n                        }\r\n                    }\r\n                    return 0;\r\n                });\r\n            }\r\n            // now we paginate\r\n            if(options && (options.start || options.count)){\r\n                var total = results.length;\r\n                results = results.slice(options.start || 0, (options.start || 0) + (options.count || Infinity));\r\n                results.total = total;\r\n            }\r\n            return results;\r\n        }\r\n        execute.matches = query;\r\n        return execute;\r\n    };\r\n\r\n    var QueryResults = function(results){\r\n        // summary:\r\n        //      A function that wraps the results of a store query with additional\r\n        //      methods.\r\n        // description:\r\n        //      QueryResults is a basic wrapper that allows for array-like iteration\r\n        //      over any kind of returned data from a query.  While the simplest store\r\n        //      will return a plain array of data, other stores may return deferreds or\r\n        //      promises; this wrapper makes sure that *all* results can be treated\r\n        //      the same.\r\n        //\r\n        //      Additional methods include `forEach`, `filter` and `map`.\r\n        // results: Array|dojo/promise/Promise\r\n        //      The result set as an array, or a promise for an array.\r\n        // returns:\r\n        //      An array-like object that can be used for iterating over.\r\n        // example:\r\n        //      Query a store and iterate over the results.\r\n        //\r\n        //  |   store.query({ prime: true }).forEach(function(item){\r\n        //  |       //  do something\r\n        //  |   });\r\n\r\n        if(!results){\r\n            return results;\r\n        }\r\n\r\n        var isPromise = !!results.then;\r\n        // if it is a promise it may be frozen\r\n        if(isPromise){\r\n            results = Object.delegate(results);\r\n        }\r\n        function addIterativeMethod(method){\r\n            // Always add the iterative methods so a QueryResults is\r\n            // returned whether the environment is ES3 or ES5\r\n            results[method] = function(){\r\n                var args = arguments;\r\n                var result = Deferred.when(results, function(results){\r\n                    //Array.prototype.unshift.call(args, results);\r\n                    return QueryResults(Array.prototype[method].apply(results, args));\r\n                });\r\n                // forEach should only return the result of when()\r\n                // when we're wrapping a promise\r\n                if(method !== \"forEach\" || isPromise){\r\n                    return result;\r\n                }\r\n            };\r\n        }\r\n\r\n        addIterativeMethod(\"forEach\");\r\n        addIterativeMethod(\"filter\");\r\n        addIterativeMethod(\"map\");\r\n        if(results.total == null){\r\n            results.total = Deferred.when(results, function(results){\r\n                return results.length;\r\n            });\r\n        }\r\n        return results; // Object\r\n    };\r\n\r\n    var async = {\r\n        parallel : function(arr,args,ctx) {\r\n            var rets = [];\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            each(arr,function(i,func){\r\n                rets.push(func.apply(ctx,args));\r\n            });\r\n\r\n            return Deferred.all(rets);\r\n        },\r\n\r\n        series : function(arr,args,ctx) {\r\n            var rets = [],\r\n                d = new Deferred(),\r\n                p = d.promise;\r\n\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            d.resolve();\r\n            each(arr,function(i,func){\r\n                p = p.then(function(){\r\n                    return func.apply(ctx,args);\r\n                });\r\n                rets.push(p);\r\n            });\r\n\r\n            return Deferred.all(rets);\r\n        },\r\n\r\n        waterful : function(arr,args,ctx) {\r\n            var d = new Deferred(),\r\n                p = d.promise;\r\n\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            d.resolveWith(ctx,args);\r\n\r\n            each(arr,function(i,func){\r\n                p = p.then(func);\r\n            });\r\n            return p;\r\n        }\r\n    };\r\n\r\n    var ArrayStore = createClass({\r\n        \"klassName\": \"ArrayStore\",\r\n\r\n        \"queryEngine\": SimpleQueryEngine,\r\n        \r\n        \"idProperty\": \"id\",\r\n\r\n\r\n        get: function(id){\r\n            // summary:\r\n            //      Retrieves an object by its identity\r\n            // id: Number\r\n            //      The identity to use to lookup the object\r\n            // returns: Object\r\n            //      The object in the store that matches the given id.\r\n            return this.data[this.index[id]];\r\n        },\r\n\r\n        getIdentity: function(object){\r\n            return object[this.idProperty];\r\n        },\r\n\r\n        put: function(object, options){\r\n            var data = this.data,\r\n                index = this.index,\r\n                idProperty = this.idProperty;\r\n            var id = object[idProperty] = (options && \"id\" in options) ? options.id : idProperty in object ? object[idProperty] : Math.random();\r\n            if(id in index){\r\n                // object exists\r\n                if(options && options.overwrite === false){\r\n                    throw new Error(\"Object already exists\");\r\n                }\r\n                // replace the entry in data\r\n                data[index[id]] = object;\r\n            }else{\r\n                // add the new object\r\n                index[id] = data.push(object) - 1;\r\n            }\r\n            return id;\r\n        },\r\n\r\n        add: function(object, options){\r\n            (options = options || {}).overwrite = false;\r\n            // call put with overwrite being false\r\n            return this.put(object, options);\r\n        },\r\n\r\n        remove: function(id){\r\n            // summary:\r\n            //      Deletes an object by its identity\r\n            // id: Number\r\n            //      The identity to use to delete the object\r\n            // returns: Boolean\r\n            //      Returns true if an object was removed, falsy (undefined) if no object matched the id\r\n            var index = this.index;\r\n            var data = this.data;\r\n            if(id in index){\r\n                data.splice(index[id], 1);\r\n                // now we have to reindex\r\n                this.setData(data);\r\n                return true;\r\n            }\r\n        },\r\n        query: function(query, options){\r\n            // summary:\r\n            //      Queries the store for objects.\r\n            // query: Object\r\n            //      The query to use for retrieving objects from the store.\r\n            // options: dojo/store/api/Store.QueryOptions?\r\n            //      The optional arguments to apply to the resultset.\r\n            // returns: dojo/store/api/Store.QueryResults\r\n            //      The results of the query, extended with iterative methods.\r\n            //\r\n            // example:\r\n            //      Given the following store:\r\n            //\r\n            //  |   var store = new Memory({\r\n            //  |       data: [\r\n            //  |           {id: 1, name: \"one\", prime: false },\r\n            //  |           {id: 2, name: \"two\", even: true, prime: true},\r\n            //  |           {id: 3, name: \"three\", prime: true},\r\n            //  |           {id: 4, name: \"four\", even: true, prime: false},\r\n            //  |           {id: 5, name: \"five\", prime: true}\r\n            //  |       ]\r\n            //  |   });\r\n            //\r\n            //  ...find all items where \"prime\" is true:\r\n            //\r\n            //  |   var results = store.query({ prime: true });\r\n            //\r\n            //  ...or find all items where \"even\" is true:\r\n            //\r\n            //  |   var results = store.query({ even: true });\r\n            return QueryResults(this.queryEngine(query, options)(this.data));\r\n        },\r\n\r\n        setData: function(data){\r\n            // summary:\r\n            //      Sets the given data as the source for this store, and indexes it\r\n            // data: Object[]\r\n            //      An array of objects to use as the source of data.\r\n            if(data.items){\r\n                // just for convenience with the data format IFRS expects\r\n                this.idProperty = data.identifier || this.idProperty;\r\n                data = this.data = data.items;\r\n            }else{\r\n                this.data = data;\r\n            }\r\n            this.index = {};\r\n            for(var i = 0, l = data.length; i < l; i++){\r\n                this.index[data[i][this.idProperty]] = i;\r\n            }\r\n        },\r\n\r\n        init: function(options) {\r\n            for(var i in options){\r\n                this[i] = options[i];\r\n            }\r\n            this.setData(this.data || []);\r\n        }\r\n\r\n    });\r\n\r\n    var Xhr = (function(){\r\n        var jsonpID = 0,\r\n            document = window.document,\r\n            key,\r\n            name,\r\n            rscript = /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi,\r\n            scriptTypeRE = /^(?:text|application)\\/javascript/i,\r\n            xmlTypeRE = /^(?:text|application)\\/xml/i,\r\n            jsonType = 'application/json',\r\n            htmlType = 'text/html',\r\n            blankRE = /^\\s*$/;\r\n\r\n        var XhrDefaultOptions = {\r\n            async: true,\r\n\r\n            // Default type of request\r\n            type: 'GET',\r\n            // Callback that is executed before request\r\n            beforeSend: noop,\r\n            // Callback that is executed if the request succeeds\r\n            success: noop,\r\n            // Callback that is executed the the server drops error\r\n            error: noop,\r\n            // Callback that is executed on request complete (both: error and success)\r\n            complete: noop,\r\n            // The context for the callbacks\r\n            context: null,\r\n            // Whether to trigger \"global\" Ajax events\r\n            global: true,\r\n\r\n            // MIME types mapping\r\n            // IIS returns Javascript as \"application/x-javascript\"\r\n            accepts: {\r\n                script: 'text/javascript, application/javascript, application/x-javascript',\r\n                json: 'application/json',\r\n                xml: 'application/xml, text/xml',\r\n                html: 'text/html',\r\n                text: 'text/plain'\r\n            },\r\n            // Whether the request is to another domain\r\n            crossDomain: false,\r\n            // Default timeout\r\n            timeout: 0,\r\n            // Whether data should be serialized to string\r\n            processData: true,\r\n            // Whether the browser should be allowed to cache GET responses\r\n            cache: true,\r\n\r\n            xhrFields : {\r\n                withCredentials : true\r\n            }\r\n        };\r\n\r\n        function mimeToDataType(mime) {\r\n            if (mime) {\r\n                mime = mime.split(';', 2)[0];\r\n            }\r\n            if (mime) {\r\n                if (mime == htmlType) {\r\n                    return \"html\";\r\n                } else if (mime == jsonType) {\r\n                    return \"json\";\r\n                } else if (scriptTypeRE.test(mime)) {\r\n                    return \"script\";\r\n                } else if (xmlTypeRE.test(mime)) {\r\n                    return \"xml\";\r\n                }\r\n            }\r\n            return \"text\";\r\n        }\r\n\r\n        function appendQuery(url, query) {\r\n            if (query == '') return url\r\n            return (url + '&' + query).replace(/[&?]{1,2}/, '?')\r\n        }\r\n\r\n        // serialize payload and append it to the URL for GET requests\r\n        function serializeData(options) {\r\n            options.data = options.data || options.query;\r\n            if (options.processData && options.data && type(options.data) != \"string\") {\r\n                options.data = param(options.data, options.traditional);\r\n            }\r\n            if (options.data && (!options.type || options.type.toUpperCase() == 'GET')) {\r\n                options.url = appendQuery(options.url, options.data);\r\n                options.data = undefined;\r\n            }\r\n        }\r\n\r\n        function serialize(params, obj, traditional, scope) {\r\n            var t, array = isArray(obj),\r\n                hash = isPlainObject(obj)\r\n            each(obj, function(key, value) {\r\n                t =type(value);\r\n                if (scope) key = traditional ? scope :\r\n                    scope + '[' + (hash || t == 'object' || t == 'array' ? key : '') + ']'\r\n                // handle data in serializeArray() format\r\n                if (!scope && array) params.add(value.name, value.value)\r\n                // recurse into nested objects\r\n                else if (t == \"array\" || (!traditional && t == \"object\"))\r\n                    serialize(params, value, traditional, key)\r\n                else params.add(key, value)\r\n            })\r\n        }\r\n\r\n        var param = function(obj, traditional) {\r\n            var params = []\r\n            params.add = function(key, value) {\r\n                if (isFunction(value)) value = value()\r\n                if (value == null) value = \"\"\r\n                this.push(escape(key) + '=' + escape(value))\r\n            }\r\n            serialize(params, obj, traditional)\r\n            return params.join('&').replace(/%20/g, '+')\r\n        };\r\n\r\n        var Xhr = Evented.inherit({\r\n            klassName : \"Xhr\",\r\n\r\n            _request  : function(args) {\r\n                var _ = this._,\r\n                    self = this,\r\n                    options = mixin({},XhrDefaultOptions,_.options,args),\r\n                    xhr = _.xhr = new XMLHttpRequest();\r\n\r\n                serializeData(options)\r\n\r\n                var dataType = options.dataType || options.handleAs,\r\n                    mime = options.mimeType || options.accepts[dataType],\r\n                    headers = options.headers,\r\n                    xhrFields = options.xhrFields,\r\n                    isFormData = options.data && options.data instanceof FormData,\r\n                    basicAuthorizationToken = options.basicAuthorizationToken,\r\n                    type = options.type,\r\n                    url = options.url,\r\n                    async = options.async,\r\n                    user = options.user , \r\n                    password = options.password,\r\n                    deferred = new Deferred(),\r\n                    contentType = isFormData ? false : 'application/x-www-form-urlencoded';\r\n\r\n                if (xhrFields) {\r\n                    for (name in xhrFields) {\r\n                        xhr[name] = xhrFields[name];\r\n                    }\r\n                }\r\n\r\n                if (mime && mime.indexOf(',') > -1) {\r\n                    mime = mime.split(',', 2)[0];\r\n                }\r\n                if (mime && xhr.overrideMimeType) {\r\n                    xhr.overrideMimeType(mime);\r\n                }\r\n\r\n                //if (dataType) {\r\n                //    xhr.responseType = dataType;\r\n                //}\r\n\r\n                var finish = function() {\r\n                    xhr.onloadend = noop;\r\n                    xhr.onabort = noop;\r\n                    xhr.onprogress = noop;\r\n                    xhr.ontimeout = noop;\r\n                    xhr = null;\r\n                }\r\n                var onloadend = function() {\r\n                    var result, error = false\r\n                    if ((xhr.status >= 200 && xhr.status < 300) || xhr.status == 304 || (xhr.status == 0 && getAbsoluteUrl(url).startsWith('file:'))) {\r\n                        dataType = dataType || mimeToDataType(options.mimeType || xhr.getResponseHeader('content-type'));\r\n\r\n                        result = xhr.responseText;\r\n                        try {\r\n                            if (dataType == 'script') {\r\n                                eval(result);\r\n                            } else if (dataType == 'xml') {\r\n                                result = xhr.responseXML;\r\n                            } else if (dataType == 'json') {\r\n                                result = blankRE.test(result) ? null : JSON.parse(result);\r\n                            } else if (dataType == \"blob\") {\r\n                                result = Blob([xhrObj.response]);\r\n                            } else if (dataType == \"arraybuffer\") {\r\n                                result = xhr.reponse;\r\n                            }\r\n                        } catch (e) { \r\n                            error = e;\r\n                        }\r\n\r\n                        if (error) {\r\n                            deferred.reject(error,xhr.status,xhr);\r\n                        } else {\r\n                            deferred.resolve(result,xhr.status,xhr);\r\n                        }\r\n                    } else {\r\n                        deferred.reject(new Error(xhr.statusText),xhr.status,xhr);\r\n                    }\r\n                    finish();\r\n                };\r\n\r\n                var onabort = function() {\r\n                    if (deferred) {\r\n                        deferred.reject(new Error(\"abort\"),xhr.status,xhr);\r\n                    }\r\n                    finish();                 \r\n                }\r\n \r\n                var ontimeout = function() {\r\n                    if (deferred) {\r\n                        deferred.reject(new Error(\"timeout\"),xhr.status,xhr);\r\n                    }\r\n                    finish();                 \r\n                }\r\n\r\n                var onprogress = function(evt) {\r\n                    if (deferred) {\r\n                        deferred.progress(evt,xhr.status,xhr);\r\n                    }\r\n                }\r\n\r\n                xhr.onloadend = onloadend;\r\n                xhr.onabort = onabort;\r\n                xhr.ontimeout = ontimeout;\r\n                xhr.onprogress = onprogress;\r\n\r\n                xhr.open(type, url, async, user, password);\r\n               \r\n                if (headers) {\r\n                    for ( var key in headers) {\r\n                        var value = headers[key];\r\n \r\n                        if(key.toLowerCase() === 'content-type'){\r\n                            contentType = headers[hdr];\r\n                        } else {\r\n                           xhr.setRequestHeader(key, value);\r\n                        }\r\n                    }\r\n                }   \r\n\r\n                if  (contentType && contentType !== false){\r\n                    xhr.setRequestHeader('Content-Type', contentType);\r\n                }\r\n\r\n                if(!headers || !('X-Requested-With' in headers)){\r\n                    xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\r\n                }\r\n\r\n\r\n                //If basicAuthorizationToken is defined set its value into \"Authorization\" header\r\n                if (basicAuthorizationToken) {\r\n                    xhr.setRequestHeader(\"Authorization\", basicAuthorizationToken);\r\n                }\r\n\r\n                xhr.send(options.data ? options.data : null);\r\n\r\n                return deferred.promise;\r\n\r\n            },\r\n\r\n            \"abort\": function() {\r\n                var _ = this._,\r\n                    xhr = _.xhr;\r\n\r\n                if (xhr) {\r\n                    xhr.abort();\r\n                }    \r\n            },\r\n\r\n\r\n            \"request\": function(args) {\r\n                return this._request(args);\r\n            },\r\n\r\n            get : function(args) {\r\n                args = args || {};\r\n                args.type = \"GET\";\r\n                return this._request(args);\r\n            },\r\n\r\n            post : function(args) {\r\n                args = args || {};\r\n                args.type = \"POST\";\r\n                return this._request(args);\r\n            },\r\n\r\n            patch : function(args) {\r\n                args = args || {};\r\n                args.type = \"PATCH\";\r\n                return this._request(args);\r\n            },\r\n\r\n            put : function(args) {\r\n                args = args || {};\r\n                args.type = \"PUT\";\r\n                return this._request(args);\r\n            },\r\n\r\n            del : function(args) {\r\n                args = args || {};\r\n                args.type = \"DELETE\";\r\n                return this._request(args);\r\n            },\r\n\r\n            \"init\": function(options) {\r\n                this._ = {\r\n                    options : options || {}\r\n                };\r\n            }\r\n        });\r\n\r\n        [\"request\",\"get\",\"post\",\"put\",\"del\",\"patch\"].forEach(function(name){\r\n            Xhr[name] = function(url,args) {\r\n                var xhr = new Xhr({\"url\" : url});\r\n                return xhr[name](args);\r\n            };\r\n        });\r\n\r\n        Xhr.defaultOptions = XhrDefaultOptions;\r\n        Xhr.param = param;\r\n\r\n        return Xhr;\r\n    })();\r\n\r\n    var Restful = Evented.inherit({\r\n        \"klassName\" : \"Restful\",\r\n\r\n        \"idAttribute\": \"id\",\r\n        \r\n        getBaseUrl : function(args) {\r\n            //$$baseEndpoint : \"/files/${fileId}/comments\",\r\n            var baseEndpoint = String.substitute(this.baseEndpoint,args),\r\n                baseUrl = this.server + this.basePath + baseEndpoint;\r\n            if (args[this.idAttribute]!==undefined) {\r\n                baseUrl = baseUrl + \"/\" + args[this.idAttribute]; \r\n            }\r\n            return baseUrl;\r\n        },\r\n        _head : function(args) {\r\n            //get resource metadata .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n        },\r\n        _get : function(args) {\r\n            //get resource ,one or list .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, null if list\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            return Xhr.get(this.getBaseUrl(args),args);\r\n        },\r\n        _post  : function(args,verb) {\r\n            //create or move resource .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            //verb : the verb ,ex: copy,touch,trash,untrash,watch\r\n            var url = this.getBaseUrl(args);\r\n            if (verb) {\r\n                url = url + \"/\" + verb;\r\n            }\r\n            return Xhr.post(url, args);\r\n        },\r\n\r\n        _put  : function(args,verb) {\r\n            //update resource .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            //verb : the verb ,ex: copy,touch,trash,untrash,watch\r\n            var url = this.getBaseUrl(args);\r\n            if (verb) {\r\n                url = url + \"/\" + verb;\r\n            }\r\n            return Xhr.put(url, args);\r\n        },\r\n\r\n        _delete : function(args) {\r\n            //delete resource . \r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}         \r\n\r\n            // HTTP request : DELETE http://center.utilhub.com/registry/v1/apps/{appid}\r\n            var url = this.getBaseUrl(args);\r\n            return Xhr.del(url);\r\n        },\r\n\r\n        _patch : function(args){\r\n            //update resource metadata. \r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            var url = this.getBaseUrl(args);\r\n            return Xhr.patch(url, args);\r\n        },\r\n        query: function(params) {\r\n            \r\n            return this._post(params);\r\n        },\r\n\r\n        retrieve: function(params) {\r\n            return this._get(params);\r\n        },\r\n\r\n        create: function(params) {\r\n            return this._post(params);\r\n        },\r\n\r\n        update: function(params) {\r\n            return this._put(params);\r\n        },\r\n\r\n        delete: function(params) {\r\n            // HTTP request : DELETE http://center.utilhub.com/registry/v1/apps/{appid}\r\n            return this._delete(params);\r\n        },\r\n\r\n        patch: function(params) {\r\n           // HTTP request : PATCH http://center.utilhub.com/registry/v1/apps/{appid}\r\n            return this._patch(params);\r\n        },\r\n        init: function(params) {\r\n            mixin(this,params);\r\n //           this._xhr = XHRx();\r\n       }\r\n\r\n\r\n    });\r\n\r\n    function langx() {\r\n        return langx;\r\n    }\r\n\r\n    mixin(langx, {\r\n        after: aspect(\"after\"),\r\n\r\n        allKeys: allKeys,\r\n\r\n        around: aspect(\"around\"),\r\n\r\n        ArrayStore : ArrayStore,\r\n\r\n        async : async,\r\n        \r\n        before: aspect(\"before\"),\r\n\r\n        camelCase: function(str) {\r\n            return str.replace(/-([\\da-z])/g, function(a) {\r\n                return a.toUpperCase().replace('-', '');\r\n            });\r\n        },\r\n\r\n        clone: clone,\r\n\r\n        compact: compact,\r\n\r\n        createEvent : createEvent,\r\n\r\n        dasherize: dasherize,\r\n\r\n        debounce: debounce,\r\n\r\n        defaults : createAssigner(allKeys, true),\r\n\r\n        delegate: delegate,\r\n\r\n        Deferred: Deferred,\r\n\r\n        Evented: Evented,\r\n\r\n        defer: defer,\r\n\r\n        deserializeValue: deserializeValue,\r\n\r\n        each: each,\r\n\r\n        first : function(items,n) {\r\n            if (n) {\r\n                return items.slice(0,n);\r\n            } else {\r\n                return items[0];\r\n            }\r\n        },\r\n\r\n        flatten: flatten,\r\n\r\n        funcArg: funcArg,\r\n\r\n        getQueryParams: getQueryParams,\r\n\r\n        has: has,\r\n\r\n        inArray: inArray,\r\n\r\n        isArray: isArray,\r\n\r\n        isArrayLike: isArrayLike,\r\n\r\n        isBoolean: isBoolean,\r\n\r\n        isDefined: function(v) {\r\n            return v !== undefined;\r\n        },\r\n\r\n        isDocument: isDocument,\r\n\r\n        isEmptyObject: isEmptyObject,\r\n\r\n        isEqual: isEqual,\r\n\r\n        isFunction: isFunction,\r\n\r\n        isHtmlNode: isHtmlNode,\r\n\r\n        isMatch: isMatch,\r\n\r\n        isNumber: isNumber,\r\n\r\n        isObject: isObject,\r\n\r\n        isPlainObject: isPlainObject,\r\n\r\n        isString: isString,\r\n\r\n        isSameOrigin: isSameOrigin,\r\n\r\n        isWindow: isWindow,\r\n\r\n        keys: keys,\r\n\r\n        klass: function(props, parent,mixins, options) {\r\n            return createClass(props, parent, mixins,options);\r\n        },\r\n\r\n        lowerFirst: function(str) {\r\n            return str.charAt(0).toLowerCase() + str.slice(1);\r\n        },\r\n\r\n        makeArray: makeArray,\r\n\r\n        map: map,\r\n\r\n        mixin: mixin,\r\n\r\n        noop : noop,\r\n\r\n        proxy: proxy,\r\n\r\n        removeItem: removeItem,\r\n\r\n        Restful: Restful,\r\n\r\n        result : result,\r\n        \r\n        returnTrue: function() {\r\n            return true;\r\n        },\r\n\r\n        returnFalse: function() {\r\n            return false;\r\n        },\r\n\r\n        safeMixin: safeMixin,\r\n\r\n        serializeValue: function(value) {\r\n            return JSON.stringify(value)\r\n        },\r\n\r\n        Stateful: Stateful,\r\n\r\n        substitute: substitute,\r\n\r\n        toPixel: toPixel,\r\n\r\n        trim: trim,\r\n\r\n        type: type,\r\n\r\n        uid: uid,\r\n\r\n        uniq: uniq,\r\n\r\n        uniqueId: uniqueId,\r\n\r\n        upperFirst: function(str) {\r\n            return str.charAt(0).toUpperCase() + str.slice(1);\r\n        },\r\n\r\n        URL: typeof window !== \"undefined\" ? window.URL || window.webkitURL : null,\r\n\r\n        values: values,\r\n\r\n        Xhr: Xhr\r\n\r\n    });\r\n\r\n    return skylark.langx = langx;\r\n});\ndefine('skylark-utils/langx',[\r\n    \"skylark-langx/langx\"\r\n], function(langx) {\r\n    return langx;\r\n});\r\n\ndefine('skylark-utils-math/math',[\r\n    \"skylark-utils/skylark\",\r\n    \"skylark-utils/langx\"\r\n], function(skylark, langx) {\r\n\tvar math = skylark.math = {\r\n\r\n\t};\r\n\r\n\treturn math;\r\n});\ndefine('skylark-utils-math/Geometry',[\r\n    \"skylark-langx/langx\",\r\n    \"./math\"\r\n],function(langx, math) {\r\n\tvar Geometry  = math.Geometry = langx.klass({\r\n\t\t\"klassName\"\t:\t\"Geometry\",\r\n\t});\r\n\r\n\r\n\treturn Geometry;\r\n\r\n});\r\n\ndefine('skylark-utils-math/Point',[\r\n    \"skylark-langx/langx\",\r\n    \"./math\",\r\n    \"./Geometry\",\r\n],function(langx, math, Geometry) {\r\n\r\n    var Point = math.Point = Geometry.inherit({\r\n        \"klassName\": \"Point\",\r\n        \"x\": {\r\n            get : function() {\r\n                return this._.x;\r\n            }\r\n        },\r\n        // y: Number\r\n        //\t\tThe Y coordinate of the default rectangle's position, value 0.\r\n        \"y\": {\r\n            get : function() {\r\n                return this._.y;\r\n            }\r\n        },\r\n\t\t\"clone\"\t: function(){\r\n\t\t\tvar _ = this._;\r\n\t\t\treturn new Point(_.x,_.y);\r\n\t\t\r\n\t\t},\r\n\t\t\"move\"\t: function(/*Number*/dx,/*Number*/dy) {\r\n\t\t\tvar _ = this._;\r\n\t\t\treturn new Point(_.x + dx,_.y + dy);\r\n\t\t},\r\n\t\t\"notEqual\"\t:\tfunction(/*Point*/p) {\r\n\t\t\tvar _ = this._;\r\n\t\t\treturn !p || p.x != _.x || p.y != _.y;\r\n\t\t},\r\n\t\t\r\n\t\t\"equal\"\t:\tfunction(/*Point*/p){\r\n\t\t\treturn  !this.notEqual(p);\r\n\t\t},\r\n\t\t\r\n        \"init\" : function(x, y) {\r\n            var _ = this._ = {};\r\n            _.x = x || 0;\r\n            _.y = y || 0;\r\n        }\r\n\t});\r\n\t\r\n\tPoint.fromString = function(s) {\r\n\t\tvar a = s.split(\",\");\r\n\t\treturn new Point(parseFloat(a[0]),parseFloat(a[1]));\r\n\t};\r\n\r\n\tPoint.fromPlain = function(o) {\r\n\t\treturn new Point(o.x,o.y);\r\n\t};\r\n\r\n\tPoint.fromArray = function(a) {\r\n\t\treturn new Point(a[0],a[1]);\r\n\t};\r\n\t\r\n\tPoint.Zero = new Point(0,0);\r\n\r\n\treturn Point;\r\n\t\r\n});\t\r\n\ndefine('skylark-utils-math/Arrow',[\r\n    \"skylark-langx/langx\",\r\n    \"./math\",\r\n    \"./Geometry\",\r\n    \"./Point\"\r\n], function(langx, math, Geometry, Point) {\r\n    var Direction = {\r\n        \"left\" : 1,\r\n        \"top\" : 2,\r\n        \"right\" : 3, \r\n        \"bottom\" : 4\r\n    };\r\n\r\n    var Arrow = math.Arrow = Geometry.inherit({\r\n        \"klassName\": \"Arrow\",\r\n        \"bounds\": {\r\n            get : function() {\r\n                // summary:\r\n                //\t\treturns the bounding box\r\n                var \r\n                    _ = this._,\r\n                    box = {\r\n                    x: _.x,\r\n                    y: this.y,\r\n                    width: _.width,\r\n                    height: _.height\r\n                };\r\n                return box;\r\n            }\r\n        },\r\n       \"x\": {\r\n            get : function() {\r\n                return this._.x;\r\n            }\r\n        },\r\n        // y: Number\r\n        //\t\tThe Y coordinate of the default rectangle's position, value 0.\r\n        \"y\": {\r\n            get : function() {\r\n                return this._.y;\r\n            }\r\n        },\r\n        // width: Number\r\n        //\t\tThe width of the default rectangle, value 100.\r\n        \"width\": {\r\n            get : function() {\r\n                return this._.width;\r\n            }\r\n        },\r\n        // height: Number\r\n        //\t\tThe height of the default rectangle, value 100.\r\n        \"height\": {\r\n            get : function() {\r\n                return this._.height;\r\n            }\r\n        },\r\n        // r: Number\r\n        //\t\tThe corner radius for the default rectangle, value 0.\r\n        \"direction\": {\r\n            get : function() {\r\n                return this._.direction;\r\n            }\r\n        },\r\n        \"leftTop\": {\r\n            get: function() {\r\n                var _ = this._;\r\n                return new Point(_.x, _.y);\r\n            }\r\n        },\r\n        \"leftBottom\": {\r\n            get: function() {\r\n                var _ = this._;\r\n                return new Point(_.x, _.y + _.height);\r\n            }\r\n        },\r\n        \"rightTop\": {\r\n            get: function() {\r\n                var _ = this._;\r\n                return new Point(_.x + _.width, _.y);\r\n            }\r\n        },\r\n        \"rightBottom\": {\r\n            get: function() {\r\n                var _ = this._;\r\n                return new Point(_.x + _.width, _.y + _.height);\r\n            }\r\n        },\r\n        \"move\": function(dx, dy) {\r\n            var _ = this._;\r\n            return new Arrow(_.x + dx,_.y + dy,_.width,_.height,_.direction);\r\n        },\r\n        \"containPoint\": function(x,y) {\r\n            // support function(p)\r\n            if (y === undefined) {\r\n                var p = x;\r\n                x = p.x;\r\n                y = p.y;\r\n            }\r\n            var _ = this._;\r\n\r\n            return (x >= _.x) && (x < _.x + _.width) && (y >= _.y) && (y < _.y + _.height);\r\n        },\r\n        \"init\" : function(x, y, width, height, direction) {\r\n            var _ = this._ = {};\r\n            _.x = x || 0;\r\n            _.y = y || 0;\r\n            _.width = width || 0;\r\n            _.height = height || 0;\r\n            _.direction = direction || Direction.top;\r\n        }\r\n    });\r\n\r\n    Arrow.Direction = Direction;\r\n\r\n    return Arrow;\r\n});\r\n\ndefine('skylark-utils-math/Circle',[\r\n    \"skylark-langx/langx\",\r\n    \"./math\",\r\n    \"./Geometry\"\r\n], function(langx, math, Geometry) {\r\n\r\n    var Circle = math.Circle = Geometry.inherit({\r\n        \"klassName\": \"Circle\",\r\n\r\n        \"bounds\": {\r\n            get : function() {\r\n                // summary:\r\n                //      returns the bounding box\r\n                var _ = this._,\r\n                    box = {\r\n                        x: _.cx - _.r,\r\n                        y: _.cy - _.r,\r\n                        width: 2 * _.r,\r\n                        height: 2 * _.r\r\n                    };\r\n                return box;\r\n            }\r\n        },\r\n\r\n        // cx: Number\r\n        //\t\tThe X coordinate of the center of the circle, default value 0.\r\n        \"cx\": {\r\n            get : function() {\r\n                return this._.cx;\r\n            }\r\n        },\r\n        // cy: Number\r\n        //\t\tThe Y coordinate of the center of the circle, default value 0.\r\n        \"cy\": {\r\n            get : function() {\r\n                return this._.cy;\r\n            }\r\n        },\r\n        // r: Number\r\n        //\t\tThe radius, default value 100.\r\n        \"r\": {\r\n            get : function() {\r\n                return this._.r;\r\n            }\r\n        },\r\n        move: function(dx, dy) {\r\n            var _ = this._;            \r\n            return new Circle(_.cx + dx,_.cy + dy,_.r);\r\n        },\r\n        containPoint: function(x,y) {\r\n            // support function(p)\r\n            if (y === undefined) {\r\n                var p = x;\r\n                x = p.x;\r\n                y = p.y;\r\n            }\r\n            var _ = this._;\r\n\r\n            var diff = (x - _.x) * (x - _.x) + (y - _.y) * (y - _.y);\r\n            if (diff < _.r * _.r) {\r\n                return true;\r\n            }\r\n            return false;\r\n        },\r\n        \"init\" : function(cx, cy, r) {\r\n            var _ = this._ = {};\r\n            _.cx = cx || 0;\r\n            _.cy = cy || 0;\r\n            _.r = r || 0;\r\n        }\r\n\r\n    });\r\n\r\n    return Circle;\r\n});\r\n\ndefine('skylark-utils-math/Ellipse',[\r\n    \"skylark-langx/langx\",\r\n    \"./math\",\r\n    \"./Geometry\",\r\n], function(langx, math, Geometry) {\r\n\r\n    var Ellipse = math.Ellipse = Geometry.inherit({\r\n        \"klassName\": \"Ellipse\",\r\n\r\n        \"bounds\": {\r\n            get : function() {\r\n                // summary:\r\n                //      returns the bounding box\r\n                var _ = this._,\r\n                    box = {\r\n                        x: _.cx - _.rx,\r\n                        y: _.cy - _.ry,\r\n                        width: 2 * _.rx,\r\n                        height: 2 * _.ry\r\n                    };\r\n                return box;\r\n            }\r\n        },\r\n\r\n        // cx: Number\r\n        //\t\tThe X coordinate of the center of the ellipse, default value 0.\r\n        \"cx\": {\r\n            get : function() {\r\n                return this._.cx;\r\n            }\r\n        },\r\n        // cy: Number\r\n        //\t\tThe Y coordinate of the center of the ellipse, default value 0.\r\n        \"cy\": {\r\n            get : function() {\r\n                return this._.cy;\r\n            }\r\n        },\r\n        // rx: Number\r\n        //\t\tThe radius of the ellipse in the X direction, default value 200.\r\n        \"rx\": {\r\n            get : function() {\r\n                return this._.rx;\r\n            }\r\n        },\r\n        // ry: Number\r\n        //\t\tThe radius of the ellipse in the Y direction, default value 200.\r\n        \"ry\": {\r\n            get : function() {\r\n                return this._.ry;\r\n            }\r\n        },\r\n        \"move\": function(dx, dy) {\r\n            var _ = this._;            \r\n            return new Ellipse(_.cx + dx,_.cy + dy,_.rx,_.ry);\r\n        },\r\n\r\n        \"containPoint\": function(p) {\r\n        },\r\n\r\n        \"init\" :  function(cx, cy, rx, ry) {\r\n            var _ = this._ = {};\r\n            _.cx = cx || 0;\r\n            _.cy = cy || 0;\r\n            _.rx = rx || 0;\r\n            _.ry = ry || 0;\r\n        }\r\n    });\r\n\r\n    return Ellipse;\r\n});\r\n\n/**\r\n *\r\n * Copyright (c) 2013 psteam Inc.(http://www.psteam.co.jp)\r\n * http://www.psteam.co.jp/qface/license\r\n * \r\n * @Author: liwenfeng\r\n * @Date: 2013/02/28\r\n */\r\ndefine('skylark-utils-math/Line',[\r\n    \"skylark-langx/langx\",\r\n    \"./math\",\r\n    \"./Geometry\",\r\n    \"./Point\"\r\n], function(langx, math, Geometry, Point) {\r\n\r\n    var Line = math.Line = Geometry.inherit({\r\n        \"klassName\": \"Line\",\r\n        \"bounds\": {\r\n            get : function() {\r\n                // summary:\r\n                //\t\treturns the bounding box\r\n                var \r\n                    _ = this._,\r\n                    box = {\r\n\t\t\t\t\t\tx:\t\tMath.min(_.x1, _.x2),\r\n\t\t\t\t\t\ty:\t\tMath.min(_.y1, _.y2),\r\n\t\t\t\t\t\twidth:\tMath.abs(_.x2 - _.x1),\r\n\t\t\t\t\t\theight:\tMath.abs(_.y2 -_.y1)\r\n\t                };\r\n                return box;\r\n            }\r\n        },\r\n       \"x1\": {\r\n            get : function() {\r\n                return this._.x1;\r\n            }\r\n        },\r\n        // y: Number\r\n        //\t\tThe Y coordinate of the default rectangle's position, value 0.\r\n        \"y1\": {\r\n            get : function() {\r\n                return this._.y1;\r\n            }\r\n        },\r\n        \"x2\": {\r\n            get : function() {\r\n                return this._.x2;\r\n            }\r\n        },\r\n        \"y2\": {\r\n            get : function() {\r\n                return this._.y2;\r\n            }\r\n        },\r\n\r\n\t\t\"startPoint\" :{\r\n\t\t\tget : function(){\r\n\t\t\t\tvar _ = this._;\r\n\t\t\t\treturn new Point(_.x1,_.y1);\r\n\t\t\t}\r\n\t\t},\r\n\t\t\"endPointer\" :{\r\n\t\t\tget : function(){\r\n\t\t\t\tvar _ = this._;\r\n\t\t\t\treturn new Point(_.x2,_.y2);\r\n\t\t\t}\r\n\t\t},\r\n\t\t\t\r\n\t\tmove\t: function(dx,dy) {\r\n\t\t\tvar _ = this._;\r\n\t\t\treturn new Line(_.x1+dx,_.y1+dy,_.x2+dx,_.y2+dy);\r\n\t\t},\r\n\r\n\t\tcontainPoint : function(x,y) {\r\n            if (y === undefined) {\r\n                var p = x;\r\n                x = p.x;\r\n                y = p.y;\r\n            }\r\n            var _ = this._;\r\n\t\t\r\n    \t\treturn Math.abs((y-_.y1)*(_.x2-_.x1) - (_.y2-_.y1)*(x-_.x1)) < 1e-6;\r\n\r\n\t\t},\r\n\r\n        \"init\" : function(x1, y1, x2,y2) {\r\n            var _ = this._ = {};\r\n            _.x1 = x1 || 0;\r\n            _.y1 = y1 || 0;\r\n            _.x2 = x2 || 0;\r\n            _.y2 = y2 || 0;\r\n        }\r\n\t});\r\n\t\r\n\t\r\n\treturn Line;\r\n\t\r\n});\t\r\n\ndefine('skylark-utils-math/Polyline',[\r\n    \"skylark-langx/langx\",\r\n    \"./math\",\r\n    \"./Geometry\"\r\n], function(langx, math, Geometry) {\r\n\r\n    var Polyline = math.Polyline = Geometry.inherit({\r\n        \"klassName\": \"Polyline\",\r\n\r\n        \"bounds\": {\r\n            get : function() {\r\n                // summary:\r\n                //      returns the bounding box\r\n                var _ = this._,\r\n\t\t\t\t\tp = _.points,\r\n\t\t\t\t\tl = p.length,\r\n\t\t\t\t\tt = p[0],\r\n\t\t\t\t\tbbox = {l: t.x, t: t.y, r: t.x, b: t.y};\r\n\t\t\t\tfor(var i = 1; i < l; ++i){\r\n\t\t\t\t\tt = p[i];\r\n\t\t\t\t\tif(bbox.l > t.x) bbox.l = t.x;\r\n\t\t\t\t\tif(bbox.r < t.x) bbox.r = t.x;\r\n\t\t\t\t\tif(bbox.t > t.y) bbox.t = t.y;\r\n\t\t\t\t\tif(bbox.b < t.y) bbox.b = t.y;\r\n\t\t\t\t}\r\n\t\t\t\tvar box = {\r\n\t\t\t\t\tx:\t\tbbox.l,\r\n\t\t\t\t\ty:\t\tbbox.t,\r\n\t\t\t\t\twidth:\tbbox.r - bbox.l,\r\n\t\t\t\t\theight:\tbbox.b - bbox.t\r\n\t\t\t\t};\r\n                return box;\r\n            }\r\n        },\r\n\t\t\"points\" : {\r\n            get : function() {\r\n                return this._.points;\r\n            }\r\n\t\t},\r\n\t\t\r\n\t\t\"init\" : function(/*Array*/points) {\r\n\t\t\t//TODO: will be modified\r\n\t\t\tvar _ = this._ = {};\r\n\t\t\t_.points = points?points:[];\r\n\t\t}\r\n\t});\r\n\t\r\n\t\r\n\treturn Polyline;\r\n\t\r\n});\t\r\n\ndefine('skylark-utils-math/PolyStar',[\r\n    \"skylark-langx/langx\",\r\n    \"./math\",\r\n    \"./Geometry\",\r\n],function(langx, math, Geometry) {\r\n\r\n    var PolyStar = math.PolyStar = Geometry.inherit({\r\n        \"klassName\": \"PolyStar\",\r\n        \"bounds\": {\r\n            get : function() {\r\n                // summary:\r\n                //\t\treturns the bounding box\r\n\t\t\t\tvar _ = this._,\r\n\t\t\t\t\tp = _.points,\r\n\t\t\t\t\tl = p.length,\r\n\t\t\t\t\tt = p[0];\r\n\t\t\t\t\tbbox = {l: t.x, t: t.y, r: t.x, b: t.y};\r\n\t\t\t\tfor(var i = 1; i < l; ++i){\r\n\t\t\t\t\tt = p[i];\r\n\t\t\t\t\tif(bbox.l > t.x) bbox.l = t.x;\r\n\t\t\t\t\tif(bbox.r < t.x) bbox.r = t.x;\r\n\t\t\t\t\tif(bbox.t > t.y) bbox.t = t.y;\r\n\t\t\t\t\tif(bbox.b < t.y) bbox.b = t.y;\r\n\t\t\t\t}\r\n\t\t\t\tvar box = {\r\n\t\t\t\t\tx:\t\tbbox.l,\r\n\t\t\t\t\ty:\t\tbbox.t,\r\n\t\t\t\t\twidth:\tbbox.r - bbox.l,\r\n\t\t\t\t\theight:\tbbox.b - bbox.t\r\n\t\t\t\t};\r\n\t\t\t\treturn box;\t\r\n            }\r\n        },\r\n       \"x\": {\r\n            get : function() {\r\n                return this._.x;\r\n            }\r\n        },\r\n        // y: Number\r\n        //\t\tThe Y coordinate of the default rectangle's position, value 0.\r\n        \"y\": {\r\n            get : function() {\r\n                return this._.y;\r\n            }\r\n        },\r\n        \"radius\": {\r\n            get : function() {\r\n                return this._.radius;\r\n            }\r\n        },\r\n        \"sides\": {\r\n            get : function() {\r\n                return this._.sides;\r\n            }\r\n        },\r\n        \"pointSize\": {\r\n            get : function() {\r\n                return this._.pointSize;\r\n            }\r\n        },\r\n        \"angle\": {\r\n            get : function() {\r\n                return this._.angle;\r\n            }\r\n         },\r\n\t\t\"init\"\t:function(x, y, radius, sides, pointSize, angle){\r\n\t\t\tvar _ = this._;\r\n\t\t\t_.x = x;\r\n\t\t\t_.y = y;\r\n\t\t\t_.radius = radius;\r\n\t\t\t_.sides = sides;\r\n\t\t\t_.pointSize = pointSize;\r\n\t\t\t_.angle = angle;\r\n\t\t}\r\n\r\n\t});\r\n\t\r\n\t\r\n\treturn PolyStar;\r\n\t\r\n});\t\r\n\ndefine('skylark-utils-math/Size',[\r\n    \"skylark-langx/langx\",\r\n    \"./math\",\r\n    \"./Geometry\"\r\n],function(langx,math,Geometry) {\r\n\r\n    var Size = math.Size = Geometry.inherit({\r\n        \"klassName\": \"Size\",\r\n\t\t// width: Number\r\n\t\t//\t\tThe width of the default rectangle, value 100.\r\n\t\t\"width\" : {\r\n\t\t\tget : function() {\r\n\t\t\t\treturn this._.width;\r\n\t\t\t}\r\n\t\t},\r\n\t\t// height: Number\r\n\t\t//\t\tThe height of the default rectangle, value 100.\r\n\t\t\"height\" : {\r\n\t\t\tget : function() {\r\n\t\t\t\treturn this._.height;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t\"clone\"\t: function(){\r\n\t\t\tvar _ = this._;\r\n\t\t\treturn new Size(_.width,_.height);\r\n\t\t},\r\n\r\n        \"toArray\" : function() {\r\n            return [this.width,this.height];\r\n        },\r\n\r\n        \"toPlain\" : function() {\r\n            return {\r\n                \"width\"  : this.width,\r\n                \"height\"  : this.height\r\n            };\r\n        },\r\n        \"toString\": function() {\r\n        \treturn this.width +\",\" + this.height;\r\n        },\r\n\r\n        \"init\" : function(width,height) {\r\n        \tvar _ = this._ = {};\r\n        \t_.width = width || 0;\r\n        \t_.height = height || 0;\r\n        }\r\n\t});\r\n\t\r\n\tSize.fromString = function(s) {\r\n\t\tvar a = s.split(\",\");\r\n\t\treturn new Size(parseFloat(a[0]),parseFloat(a[1]));\r\n\t};\r\n\r\n\tSize.fromPlain = function(o) {\r\n\t\treturn new Size(o.w || o.width,o.h || o.height);\r\n\t};\r\n\r\n\tSize.fromArray = function(a) {\r\n\t\treturn new Size(a[0],a[1]);\r\n\t};\r\n\r\n\tSize.Zero = new Size(0,0);\r\n\t\r\n\treturn Size;\r\n\t\r\n});\t\r\n\ndefine('skylark-utils-math/Rect',[\r\n    \"skylark-langx/langx\",\r\n    \"./math\",\r\n    \"./Geometry\",\r\n    \"./Point\",\r\n\t\"./Size\"\r\n],function(langx, math, Geometry,Point,Size) {\r\n\r\n    var Rect = math.Rect = Geometry.inherit({\r\n        \"klassName\": \"Rect\",\r\n        \"bounds\": {\r\n            get : function() {\r\n                // summary:\r\n                //\t\treturns the bounding box\r\n                var \r\n                    _ = this._,\r\n                    box = {\r\n                    x: _.x,\r\n                    y: this.y,\r\n                    width: _.width,\r\n                    height: _.height\r\n                };\r\n                return box;\r\n            }\r\n        },\r\n       \"x\": {\r\n            get : function() {\r\n                return this._.x;\r\n            }\r\n        },\r\n        // y: Number\r\n        //\t\tThe Y coordinate of the default rectangle's position, value 0.\r\n        \"y\": {\r\n            get : function() {\r\n                return this._.y;\r\n            }\r\n        },\r\n        // width: Number\r\n        //\t\tThe width of the default rectangle, value 100.\r\n        \"width\": {\r\n            get : function() {\r\n                return this._.width;\r\n            }\r\n        },\r\n        // height: Number\r\n        //\t\tThe height of the default rectangle, value 100.\r\n        \"height\": {\r\n            get : function() {\r\n                return this._.height;\r\n            }\r\n        },\r\n        // r: Number\r\n        //\t\tThe corner radius for the default rectangle, value 0.\r\n        \"radius\": {\r\n            get : function() {\r\n                return this._.radius;\r\n            }\r\n        },\r\n        \"leftTop\": {\r\n            get: function() {\r\n                var _ = this._;\r\n                return new Point(_.x, _.y);\r\n            }\r\n        },\r\n        \"leftBottom\": {\r\n            get: function() {\r\n                var _ = this._;\r\n                return new Point(_.x, _.y + _.height);\r\n            }\r\n        },\r\n        \"rightTop\": {\r\n            get: function() {\r\n                var _ = this._;\r\n                return new Point(_.x + _.width, _.y);\r\n            }\r\n        },\r\n        \"rightBottom\": {\r\n            get: function() {\r\n                var _ = this._;\r\n                return new Point(_.x + _.width, _.y + _.height);\r\n            }\r\n        },\r\n\r\n        \"size\": {\r\n            get: function() {\r\n                var _ = this._;\r\n                return new Size(_.width, _.height);\r\n            }\r\n        },\r\n\r\n        \"move\": function(dx, dy) {\r\n            var _ = this._;\r\n            return new Rect(_.x + dx,_.y + dy,_.width,_.height,_.radius);\r\n        },\r\n\r\n        \"containPoint\": function(x,y) {\r\n            // support function(p)\r\n            if (y === undefined) {\r\n                var p = x;\r\n                x = p.x;\r\n                y = p.y;\r\n            }\r\n            var _ = this._;\r\n\r\n            return (x >= _.x) && (x < _.x + _.width) && (y >= _.y) && (y < _.y + _.height);\r\n        },\r\n\r\n\t\t\"isEmpty\"\t:\tfunction(){\r\n\t\t\treturn this.width <=0 || this.height<=0;\r\n\t\t},\r\n\t\t\r\n\t\t\"notEqual\"\t:\tfunction(/*Rect*/r) {\r\n\t\t\treturn !r || r.x != this.x || r.y != this.y || r.width != this.width || r.height != this.height || r.radius != this.radius;\r\n\t\t},\r\n\t\t\r\n\t\t\"equal\"\t:\tfunction(/*Rect*/r){\r\n\t\t\treturn  !this.notEqual(r);\r\n\t\t},\r\n\t\t\r\n\t\t\"isIntersect\"\t:function(/*Number*/x2,/*Number*/y2,/*Number*/width2,/*Number*/height2){\r\n\t\t\tvar x1 = this.x1,y1=this.y,width1=this.width,height1=this.height;\r\n\t\t\t \r\n\t\t    return (Math.min(x1 + width1, x2 + width2) - (x1 > x2 ? x1 : x2)) > 0 &&\r\n\t\t           (Math.min(y1 + height1, y2 + height2) - (y1 > y2 ? y1 : y2)) > 0;\r\n\t\t},\r\n\t\t\r\n\t\t\"intersect\"\t:\tfunction(/*Number*/x2,/*Number*/y2,/*Number*/width2,/*Number*/height2){\r\n\t\t\tvar x1 = this.x1,y1=this.y,width1=this.width,height1=this.height;\r\n\t\t\t \r\n\t\t    return (Math.min(x1 + width1, x2 + width2) - (x1 > x2 ? x1 : x2)) > 0 &&\r\n\t\t           (Math.min(y1 + height1, y2 + height2) - (y1 > y2 ? y1 : y2)) > 0;\r\n\t\t},\r\n\t\t\t\t\t\t\r\n\t\t\"unite\"\t: function(/*Number*/x2,/*Number*/y2,/*Number*/width2,/*Number*/height2){\r\n\t\t\tvar x1 = this.x1,y1=this.y,width1=this.width,height1=this.height;\r\n\t\t\t \r\n\t\t\tvar x = x1 < x2 ? x1 : x2,\r\n\t\t\t\ty = y1 < y2 ? y1 : y2,\r\n\t\t\t\twidth  = Math.max(x1 + width1, x2 + width2) - x;\r\n\t\t\t\theight = Math.max(y1 + height1, y2 + height2) - y;\r\n\t\t    \r\n\t\t    return new Rect(x,y,width,height);\r\n\t\t},\r\n\t\t\r\n\t\t\"clone\"\t: function(){\r\n\t\t\tvar _ = this._;\r\n\t\t\treturn new Rect(_.x,_.y,_.width,_.height,_.radius);\r\n\t\t},\r\n\r\n        \"init\" : function(x, y, width, height, radius) {\r\n            var _ = this._ = {};\r\n            _.x = x || 0;\r\n            _.y = y || 0;\r\n            _.width = width || 0;\r\n            _.height = height || 0;\r\n            _.radius = radius || 0;\r\n        }\r\n    });\r\n\r\n\r\n\tRect.fromString = function(s) {\r\n\t\tvar a = s.split(\",\");\r\n\t\treturn new Rect(parseFloat(a[0]),parseFloat(a[1]),parseFloat(a[2]),parseFloat(a[3]));\r\n\t};\r\n\r\n\tRect.fromPlain = function(o) {\r\n\t\treturn new Rect(o.x || o.l,o.y || o.t, o.w || o.width,o.h || o.height);\r\n\t};\r\n\r\n\tRect.fromArray = function(a) {\r\n\t\treturn new Rect(a[0],a[1],a[2],a[3]);\r\n\t};\r\n\t\r\n\tRect.Zero = new Rect(0,0,0,0);\r\n\t\r\n\treturn Rect;\r\n\t\r\n});\t\r\n\ndefine( 'skylark-utils-math/transform/Matrix',[\r\n    \"skylark-langx/langx\",\r\n    \"../math\",\r\n], function(langx,math){\r\n\t// reference easeljs/geom/Matrix2D  and dojox/gfx/matrix\r\n\t\r\n\tvar DEG_TO_RAD = Math.PI/180;\r\n\tvar _degToRadCache = {};\r\n\tvar degToRad = function(degree){\r\n\t\treturn _degToRadCache[degree] || (_degToRadCache[degree] = (Math.PI * degree / 180));\r\n\t};\r\n\tvar radToDeg = function(radian){ return radian / Math.PI * 180; };\r\n\t\r\n\r\n\t//Represents a 3 x 3 affine transformation matrix used for transformation in 2-D space.\r\n\t//|----------|\r\n\t//|m11|m21|dx| \r\n\t//|----------|\r\n\t//|m12|m22|dy|\r\n\t//|----------|\r\n\t//|  0|  0| 1|\r\n\t//|----------|\r\n\t\r\n    var Matrix = math.TransformMatrix = langx.klass({\r\n        \"klassName\": \"TransformMatrix\",\r\n\r\n\t\t\"_multiplyPoint\"\t: \tfunction(p){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tapplies the matrix to a point\r\n\t\t\t// p: Point\r\n\t\t\t//\t\ta point\r\n\t\t\t// returns: Point\r\n\t\t\tvar _ = this._,\r\n\t\t\t\tx = p.x * _.m11 + p.y * _.m21  + _.dx,\r\n\t\t\t    y = p.x * _.m12 +  p.y * _.m22 + _.dy;\r\n\t\t\treturn new Point(x,y); // Point\r\n\t\t},\r\n\r\n       \"m11\": {\r\n       \t\t//Position (0, 0) in a 3x3 affine transformation matrix.\r\n            get : function() {\r\n                return this._.m11;\r\n            }\r\n        },\r\n\r\n       \"m12\": {\r\n       \t\t//Position (0, 1) in a 3x3 affine transformation matrix.\r\n            get : function() {\r\n                return this._.m12;\r\n            }\r\n        },\r\n\r\n       \"m21\": {\r\n       \t\t//Position (1, 0) in a 3x3 affine transformation matrix.\r\n            get : function() {\r\n                return this._.m21;\r\n            }\r\n        },\r\n\r\n       \"m22\": {\r\n       \t\t//Position (1, 1) in a 3x3 affine transformation matrix.\r\n            get : function() {\r\n                return this._.m22;\r\n            }\r\n        },\r\n\r\n       \"dx\": {\r\n       \t\t// Position (2, 1) in a 3x3 affine transformation matrix.\r\n            get : function() {\r\n                return this._.dx;\r\n            }\r\n        },\r\n\r\n       \"dy\": {\r\n       \t\t// Position (2, 1) in a 3x3 affine transformation matrix.\r\n            get : function() {\r\n                return this._.dy;\r\n            }\r\n        },\r\n\r\n       \"alpha\": {\r\n       \t\t// Property representing the alpha that will be applied to a display object. This is not part of matrix\r\n       \t\t// operations, but is used for operations like getConcatenatedMatrix to provide concatenated alpha values.\r\n            get : function() {\r\n                return this._.alpha;\r\n            }\r\n        },\r\n\r\n       \"shadow\": {\r\n       \t\t// Property representing the shadow that will be applied to a display object. This is not part of matrix\r\n       \t\t// operations, but is used for operations like getConcatenatedMatrix to provide concatenated shadow values..\r\n            get : function() {\r\n                return this._.shadow;\r\n            }\r\n        },\r\n\r\n       \"compositeOperation\": {\r\n\t\t\t/**\r\n\t\t\t * Property representing the compositeOperation that will be applied to a display object. This is not part of\r\n\t\t\t * matrix operations, but is used for operations like getConcatenatedMatrix to provide concatenated\r\n\t\t\t * compositeOperation values. You can find a list of valid composite operations at:\r\n\t\t\t * <a href=\"https://developer.mozilla.org/en/Canvas_tutorial/Compositing\">https://developer.mozilla.org/en/Canvas_tutorial/Compositing</a>\r\n\t\t\t * @property compositeOperation\r\n\t\t\t * @type String\r\n\t\t\t **/\r\n            get : function() {\r\n                return this._.compositeOperation;\r\n            }\r\n        },\r\n\r\n        //Converts the specified point with Matrix and returns the result.\r\n\t\tmultiplyPoint: /*Point*/function(/*Point */ p){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tapplies the matrix to a point\r\n\t\t\treturn this._multiplyPoint(p); // Point\r\n\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * 指定した矩形を Matrix で変換し、その結果を返します。\r\n\t\t\t\t */\r\n\t\tmultiplyRectangle: /*Rect*/function(/*Rect*/ rect){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tApplies the matrix to a rectangle.\r\n\t\t\t// returns: Rect\r\n\t\t\tif(this.isIdentity())\r\n\t\t\t\treturn rect.clone(); // Rect\r\n\t\t\tvar p0 = this.multiplyPoint(rect.leftTop),\r\n\t\t\t\tp1 = this.multiplyPoint(rect.leftBottom),\r\n\t\t\t\tp2 = this.multiplyPoint(rect.right),\r\n\t\t\t\tp3 = this.multiplyPoint(rect.rightBottom),\r\n\t\t\t\tminx = Math.min(p0.x, p1.x, p2.x, p3.x),\r\n\t\t\t\tminy = Math.min(p0.y, p1.y, p2.y, p3.y),\r\n\t\t\t\tmaxx = Math.max(p0.x, p1.x, p2.x, p3.x),\r\n\t\t\t\tmaxy = Math.max(p0.y, p1.y, p2.y, p3.y);\r\n\t\t\treturn new Rect(minx,miny,maxx-minx,maxy-miny);  // Rect\r\n\t\t},\r\n\t\t/**\r\n\t\t * Concatenates the specified matrix properties with this matrix. All parameters are required.\r\n\t\t * @method prepend\r\n\t\t * @param {Number} m11\r\n\t\t * @param {Number} m12\r\n\t\t * @param {Number} m21\r\n\t\t * @param {Number} m22\r\n\t\t * @param {Number} dx\r\n\t\t * @param {Number} dy\r\n\t\t * @return {Matrix} This matrix. Useful for chaining method calls.\r\n\t\t **/\r\n\t\tprepend : function(m11, m12, m21, m22, dx, dy) {\r\n\t\t\tvar tx1 = this.dx;\r\n\t\t\tif (m11 != 1 || m12 != 0 || m21 != 0 || m22 != 1) {\r\n\t\t\t\tvar a1 = this.m11;\r\n\t\t\t\tvar c1 = this.m21;\r\n\t\t\t\tthis.m11  = a1*m11+this.m12*m21;\r\n\t\t\t\tthis.m12  = a1*m12+this.m12*m22;\r\n\t\t\t\tthis.m21  = c1*m11+this.m22*m21;\r\n\t\t\t\tthis.m22  = c1*m12+this.m22*m22;\r\n\t\t\t}\r\n\t\t\tthis.dx = tx1*m11+this.dy*m21+dx;\r\n\t\t\tthis.dy = tx1*m12+this.dy*m22+dy;\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Appends the specified matrix properties with this matrix. All parameters are required.\r\n\t\t * 指定した Matrixをこの Matrixに追加します。\r\n\t\t * @method append\r\n\t\t * @param {Number} m11\r\n\t\t * @param {Number} m12\r\n\t\t * @param {Number} m21\r\n\t\t * @param {Number} m22\r\n\t\t * @param {Number} dx\r\n\t\t * @param {Number} dy\r\n\t\t * @return {Matrix} This matrix. Useful for chaining method calls.\r\n\t\t **/\r\n\t\tappend : function(m11, m12, m21, m22, dx, dy) {\r\n\t\t\tvar a1 = this.m11;\r\n\t\t\tvar b1 = this.m12;\r\n\t\t\tvar c1 = this.m21;\r\n\t\t\tvar d1 = this.m22;\r\n\r\n\t\t\tthis.m11  = m11*a1+m12*c1;\r\n\t\t\tthis.m12  = m11*b1+m12*d1;\r\n\t\t\tthis.m21  = m21*a1+m22*c1;\r\n\t\t\tthis.m22  = m21*b1+m22*d1;\r\n\t\t\tthis.dx = dx*a1+dy*c1+this.dx;\r\n\t\t\tthis.dy = dx*b1+dy*d1+this.dy;\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Prepends the specified matrix with this matrix.\r\n\t\t * @method prependMatrix\r\n\t\t * @param {Matrix} matrix\r\n\t\t **/\r\n\t\tprependMatrix : function(matrix) {\r\n\t\t\tthis.prepend(matrix.m11, matrix.m12, matrix.m21, matrix.m22, matrix.dx, matrix.dy);\r\n\t\t\tthis.prependProperties(matrix.alpha, matrix.shadow,  matrix.compositeOperation);\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Appends the specified matrix with this matrix.\r\n\t\t * 指定した Matrixをこの Matrixに追加します。\r\n\t\t * @method appendMatrix\r\n\t\t * @param {Matrix} matrix\r\n\t\t * @return {Matrix} This matrix. Useful for chaining method calls.\r\n\t\t **/\r\n\t\tappendMatrix : function(matrix) {\r\n\t\t\tthis.append(matrix.m11, matrix.m12, matrix.m21, matrix.m22, matrix.dx, matrix.dy);\r\n\t\t\tthis.appendProperties(matrix.alpha, matrix.shadow,  matrix.compositeOperation);\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Generates matrix properties from the specified display object transform properties, and prepends them with this matrix.\r\n\t\t * For example, you can use this to generate a matrix from a display object: var mtx = new Matrix();\r\n\t\t * mtx.prependTransform(o.x, o.y, o.scaleX, o.scaleY, o.rotation);\r\n\t\t * @method prependTransform\r\n\t\t * @param {Number} x\r\n\t\t * @param {Number} y\r\n\t\t * @param {Number} scaleX\r\n\t\t * @param {Number} scaleY\r\n\t\t * @param {Number} rotation\r\n\t\t * @param {Number} skewX\r\n\t\t * @param {Number} skewY\r\n\t\t * @param {Number} regX Optional.\r\n\t\t * @param {Number} regY Optional.\r\n\t\t * @return {Matrix} This matrix. Useful for chaining method calls.\r\n\t\t **/\r\n\t\tprependTransform : function(x, y, scaleX, scaleY, rotation, skewX, skewY, regX, regY) {\r\n\t\t\tif (rotation%360) {\r\n\t\t\t\tvar r = rotation*DEG_TO_RAD;\r\n\t\t\t\tvar cos = Math.cos(r);\r\n\t\t\t\tvar sin = Math.sin(r);\r\n\t\t\t} else {\r\n\t\t\t\tcos = 1;\r\n\t\t\t\tsin = 0;\r\n\t\t\t}\r\n\r\n\t\t\tif (regX || regY) {\r\n\t\t\t\t// append the registration offset:\r\n\t\t\t\tthis.dx -= regX; this.dy -= regY;\r\n\t\t\t}\r\n\t\t\tif (skewX || skewY) {\r\n\t\t\t\t// TODO: can this be combined into a single prepend operation?\r\n\t\t\t\tskewX *= DEG_TO_RAD;\r\n\t\t\t\tskewY *= DEG_TO_RAD;\r\n\t\t\t\tthis.prepend(cos*scaleX, sin*scaleX, -sin*scaleY, cos*scaleY, 0, 0);\r\n\t\t\t\tthis.prepend(Math.cos(skewY), Math.sin(skewY), -Math.sin(skewX), Math.cos(skewX), x, y);\r\n\t\t\t} else {\r\n\t\t\t\tthis.prepend(cos*scaleX, sin*scaleX, -sin*scaleY, cos*scaleY, x, y);\r\n\t\t\t}\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Generates matrix properties from the specified display object transform properties, and appends them with this matrix.\r\n\t\t * For example, you can use this to generate a matrix from a display object: var mtx = new Matrix();\r\n\t\t * mtx.appendTransform(o.x, o.y, o.scaleX, o.scaleY, o.rotation);\r\n\t\t * @method appendTransform\r\n\t\t * @param {Number} x\r\n\t\t * @param {Number} y\r\n\t\t * @param {Number} scaleX\r\n\t\t * @param {Number} scaleY\r\n\t\t * @param {Number} rotation\r\n\t\t * @param {Number} skewX\r\n\t\t * @param {Number} skewY\r\n\t\t * @param {Number} regX Optional.\r\n\t\t * @param {Number} regY Optional.\r\n\t\t * @return {Matrix} This matrix. Useful for chaining method calls.\r\n\t\t **/\r\n\t\tappendTransform : function(x, y, scaleX, scaleY, rotation, skewX, skewY, regX, regY) {\r\n\t\t\tif (rotation%360) {\r\n\t\t\t\tvar r = rotation*DEG_TO_RAD;\r\n\t\t\t\tvar cos = Math.cos(r);\r\n\t\t\t\tvar sin = Math.sin(r);\r\n\t\t\t} else {\r\n\t\t\t\tcos = 1;\r\n\t\t\t\tsin = 0;\r\n\t\t\t}\r\n\r\n\t\t\tif (skewX || skewY) {\r\n\t\t\t\t// TODO: can this be combined into a single append?\r\n\t\t\t\tskewX *= DEG_TO_RAD;\r\n\t\t\t\tskewY *= DEG_TO_RAD;\r\n\t\t\t\tthis.append(Math.cos(skewY), Math.sin(skewY), -Math.sin(skewX), Math.cos(skewX), x, y);\r\n\t\t\t\tthis.append(cos*scaleX, sin*scaleX, -sin*scaleY, cos*scaleY, 0, 0);\r\n\t\t\t} else {\r\n\t\t\t\tthis.append(cos*scaleX, sin*scaleX, -sin*scaleY, cos*scaleY, x, y);\r\n\t\t\t}\r\n\r\n\t\t\tif (regX || regY) {\r\n\t\t\t\t// prepend the registration offset:\r\n\t\t\t\tthis.dx -= regX*this.m11+regY*this.m21; \r\n\t\t\t\tthis.dy -= regX*this.m12+regY*this.m22;\r\n\t\t\t}\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Applies a rotation transformation to the matrix.\r\n\t\t * この Matrix の原点を中心とする指定した角度の回転を適用します。\r\n\t\t * @method rotate\r\n\t\t * @param {Number} angle The angle in degrees.\r\n\t\t * @return {Matrix} This matrix. Useful for chaining method calls.\r\n\t\t **/\r\n\t\trotate : function(angle) {\r\n\t\t\tvar cos = Math.cos(angle);\r\n\t\t\tvar sin = Math.sin(angle);\r\n\r\n\t\t\tvar a1 = this.m11;\r\n\t\t\tvar c1 = this.m21;\r\n\t\t\tvar tx1 = this.dx;\r\n\r\n\t\t\tthis.m11 = a1*cos-this.m12*sin;\r\n\t\t\tthis.m12 = a1*sin+this.m12*cos;\r\n\t\t\tthis.m21 = c1*cos-this.m22*sin;\r\n\t\t\tthis.m22 = c1*sin+this.m22*cos;\r\n\t\t\tthis.dx = tx1*cos-this.dy*sin;\r\n\t\t\tthis.dy = tx1*sin+this.dy*cos;\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Applies a skew transformation to the matrix.\r\n\t\t * @method skew\r\n\t\t * @param {Number} skewX The amount to skew horizontally in degrees.\r\n\t\t * @param {Number} skewY The amount to skew vertically in degrees.\r\n\t\t * @return {Matrix} This matrix. Useful for chaining method calls.\r\n\t\t*/\r\n\t\tskew : function(skewX, skewY) {\r\n\t\t\tskewX = skewX*DEG_TO_RAD;\r\n\t\t\tskewY = skewY*DEG_TO_RAD;\r\n\t\t\tthis.append(Math.cos(skewY), Math.sin(skewY), -Math.sin(skewX), Math.cos(skewX), 0, 0);\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Applies a scale transformation to the matrix.\r\n\t\t * @method scale\r\n\t\t * @param {Number} x\r\n\t\t * @param {Number} y\r\n\t\t * @return {Matrix} This matrix. Useful for chaining method calls.\r\n\t\t **/\r\n\t\tscale : function(x, y) {\r\n\t\t\tthis.m11 *= x;\r\n\t\t\tthis.m22 *= y;\r\n\t\t\tthis.dx *= x;\r\n\t\t\tthis.dy *= y;\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Translates the matrix on the x and y axes.\r\n\t\t * @method translate\r\n\t\t * @param {Number} x\r\n\t\t * @param {Number} y\r\n\t\t * @return {Matrix} This matrix. Useful for chaining method calls.\r\n\t\t **/\r\n\t\ttranslate : function(x, y) {\r\n\t\t\tthis.dx += x;\r\n\t\t\tthis.dy += y;\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Sets the properties of the matrix to those of an identity matrix (one that applies a null transformation).\r\n\t\t * @method identity\r\n\t\t * @return {Matrix} This matrix. Useful for chaining method calls.\r\n\t\t **/\r\n\t\tidentity : function() {\r\n\t\t\tthis.alpha = this.m11 = this.m22 = 1;\r\n\t\t\tthis.m12 = this.m21 = this.dx = this.dy = 0;\r\n\t\t\tthis.shadow = this.compositeOperation = null;\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Inverts the matrix, causing it to perform the opposite transformation.\r\n\t\t * @method invert\r\n\t\t * @return {Matrix} This matrix. Useful for chaining method calls.\r\n\t\t **/\r\n\t\tinvert : function() {\r\n\t\t\tvar a1 = this.m11;\r\n\t\t\tvar b1 = this.m12;\r\n\t\t\tvar c1 = this.m21;\r\n\t\t\tvar d1 = this.m22;\r\n\t\t\tvar tx1 = this.dx;\r\n\t\t\tvar n = a1*d1-b1*c1;\r\n\r\n\t\t\tthis.m11 = d1/n;\r\n\t\t\tthis.m12 = -b1/n;\r\n\t\t\tthis.m21 = -c1/n;\r\n\t\t\tthis.m22 = a1/n;\r\n\t\t\tthis.dx = (c1*this.dy-d1*tx1)/n;\r\n\t\t\tthis.dy = -(a1*this.dy-b1*tx1)/n;\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Returns true if the matrix is an identity matrix.\r\n\t\t * @method isIdentity\r\n\t\t * @return {Boolean}\r\n\t\t **/\r\n\t\tisIdentity : function() {\r\n\t\t\treturn this.dx == 0 && this.dy == 0 && this.m11 == 1 && this.m12 == 0 && this.m21 == 0 && this.m22 == 1;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Decomposes the matrix into transform properties (x, y, scaleX, scaleY, and rotation). Note that this these values\r\n\t\t * may not match the transform properties you used to generate the matrix, though they will produce the same visual\r\n\t\t * results.\r\n\t\t * @method decompose\r\n\t\t * @param {Object} target The object to apply the transform properties to. If null, then a new object will be returned.\r\n\t\t * @return {Matrix} This matrix. Useful for chaining method calls.\r\n\t\t*/\r\n\t\tdecompose : function(target) {\r\n\t\t\t// TODO: it would be nice to be able to solve for whether the matrix can be decomposed into only scale/rotation\r\n\t\t\t// even when scale is negative\r\n\t\t\tif (target == null) { target = {}; }\r\n\t\t\ttarget.x = this.dx;\r\n\t\t\ttarget.y = this.dy;\r\n\t\t\ttarget.scaleX = Math.sqrt(this.m11 * this.m11 + this.m12 * this.m12);\r\n\t\t\ttarget.scaleY = Math.sqrt(this.m21 * this.m21 + this.m22 * this.m22);\r\n\r\n\t\t\tvar skewX = Math.atan2(-this.m21, this.m22);\r\n\t\t\tvar skewY = Math.atan2(this.m12, this.m11);\r\n\r\n\t\t\tif (skewX == skewY) {\r\n\t\t\t\ttarget.rotation = skewY/DEG_TO_RAD;\r\n\t\t\t\tif (this.m11 < 0 && this.m22 >= 0) {\r\n\t\t\t\t\ttarget.rotation += (target.rotation <= 0) ? 180 : -180;\r\n\t\t\t\t}\r\n\t\t\t\ttarget.skewX = target.skewY = 0;\r\n\t\t\t} else {\r\n\t\t\t\ttarget.skewX = skewX/DEG_TO_RAD;\r\n\t\t\t\ttarget.skewY = skewY/DEG_TO_RAD;\r\n\t\t\t}\r\n\t\t\treturn target;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Reinitializes all matrix properties to those specified.\r\n\t\t * @method appendProperties\r\n\t\t * @param {Number} m11\r\n\t\t * @param {Number} m12\r\n\t\t * @param {Number} m21\r\n\t\t * @param {Number} m22\r\n\t\t * @param {Number} dx\r\n\t\t * @param {Number} dy\r\n\t\t * @param {Number} alpha desired alpha value\r\n\t\t * @param {Shadow} shadow desired shadow value\r\n\t\t * @param {String} compositeOperation desired composite operation value\r\n\t\t * @return {Matrix} This matrix. Useful for chaining method calls.\r\n\t\t*/\r\n\t\treinitialize : function(m11,m12,m21,m22,dx,dy,alpha,shadow,compositeOperation) {\r\n\t\t\tthis._initialize(m11,m12,m21,m22,dx,dy);\r\n\t\t\tthis.alpha = alpha || 1;\r\n\t\t\tthis.shadow = shadow;\r\n\t\t\tthis.compositeOperation = compositeOperation;\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Appends the specified visual properties to the current matrix.\r\n\t\t * @method appendProperties\r\n\t\t * @param {Number} alpha desired alpha value\r\n\t\t * @param {Shadow} shadow desired shadow value\r\n\t\t * @param {String} compositeOperation desired composite operation value\r\n\t\t * @return {Matrix} This matrix. Useful for chaining method calls.\r\n\t\t*/\r\n\t\tappendProperties : function(alpha, shadow, compositeOperation) {\r\n\t\t\tthis.alpha *= alpha;\r\n\t\t\tthis.shadow = shadow || this.shadow;\r\n\t\t\tthis.compositeOperation = compositeOperation || this.compositeOperation;\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Prepends the specified visual properties to the current matrix.\r\n\t\t * @method prependProperties\r\n\t\t * @param {Number} alpha desired alpha value\r\n\t\t * @param {Shadow} shadow desired shadow value\r\n\t\t * @param {String} compositeOperation desired composite operation value\r\n\t\t * @return {Matrix} This matrix. Useful for chaining method calls.\r\n\t\t*/\r\n\t\tprependProperties : function(alpha, shadow, compositeOperation) {\r\n\t\t\tthis.alpha *= alpha;\r\n\t\t\tthis.shadow = this.shadow || shadow;\r\n\t\t\tthis.compositeOperation = this.compositeOperation || compositeOperation;\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t *Multiply Matrix by another Matrix.\r\n\t\t */\r\n\t\tmultiply: function(matrix){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tcombines matrices by multiplying them sequentially in the given order\r\n\t\t\t// matrix: Matrix\r\n\t\t\t//\t\ta 2D matrix-like object,\r\n\t\t\t//\t\tall subsequent arguments are matrix-like objects too\r\n\r\n\t\t\t// combine matrices\r\n\t\t\tvar m11 = this.m11,m12 = this.m12,m21 = this.m21,m22=this.m22,dx=this.dx,dy=this.dy;\r\n\t\t\tvar r = matrix;\r\n\t\t\tthis.m11 = m11 * r.m11 + m21 * r.m12;\r\n\t\t\tthis.m12 = m12 * r.m11 + m22 * r.m12;\r\n\t\t\tthis.m21 = m11 * r.m21 + m21 * r.m22;\r\n\t\t\tthis.m22 = m12 * r.m21 + m22 * r.m22;\r\n\t\t\tthis.dx =  m11 * r.dx + m21 * r.dy + dx;\r\n\t\t\tthis.dy =  m12 * r.dx + m22 * r.dy + dy;\r\n\t\t\treturn this // Matrix\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Returns a clone of the Matrix instance.\r\n\t\t * @method clone\r\n\t\t * @return {Matrix} a clone of the Matrix instance.\r\n\t\t **/\r\n\t\tclone : function() {\r\n\r\n\t\t\tvar _ = this._,\r\n\t\t\t\tmtx = new Matrix(_.m11, _.m12, _.m21, _.m22, _.dx, _.dy);\r\n\t\t\tmtx.shadow = this.shadow;\r\n\t\t\tmtx.alpha = this.alpha;\r\n\t\t\tmtx.compositeOperation = this.compositeOperation;\r\n\t\t\treturn mtx;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Returns a string representation of this object.\r\n\t\t * @method toString\r\n\t\t * @return {String} a string representation of the instance.\r\n\t\t **/\r\n\t\ttoString : function() {\r\n\t\t\tvar _ = this._;\r\n\t\t\treturn \"[Matrix (m11=\"+_.m11+\" m12=\"+_.m12+\" m21=\"+_.m21+\" m22=\"+_.m22+\" dx=\"+_.dx+\" dy=\"+_.dy+\")]\";\r\n\t\t},\r\n\t\t\r\n\t\t\"init\" : function(m11, m12, m21, m22, dx, dy) {\r\n\t\t\tvar _ = this._;\r\n\t\t\t_.m11 = m11 || 1;\r\n\t\t\t_.m12 = m12 || 0;\r\n\t\t\t_.m21 = m21 || 0;\r\n\t\t\t_.m22 = m22 || 1;\r\n\t\t\t_.dx = dx || 0;\r\n\t\t\t_.dy = dy || 0;\r\n\t\t}\r\n\r\n\t});\r\n\t\r\n\tlangx.mixin(Matrix,{\r\n\t\ttranslate: function(a, b){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tforms a translation matrix\r\n\t\t\t// description:\r\n\t\t\t//\t\tThe resulting matrix is used to translate (move) points by specified offsets.\r\n\t\t\t// a: Number\r\n\t\t\t//\t\tan x coordinate value\r\n\t\t\t// b: Number\r\n\t\t\t//\t\ta y coordinate value\r\n\t\t\t// returns: Matrix\r\n\t\t\t//|----------| |-----------|\r\n\t\t\t//|m11|m21|dx| |  1|   0| a|\r\n\t\t\t//|----------| |-----------|\r\n\t\t\t//|m12|m22|dy| |  0|   1| b|\r\n\t\t\t//|----------| |-----------|\r\n\t\t\t//|  0|  0| 1| |  0|   0| 1|\r\n\t\t\t//|----------| |-----------|\r\n\r\n\t\t\treturn new Matrix(1,0,0,1,a,b); // Matrix\r\n\t\t},\r\n\t\tscale: function(a, b){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tforms a scaling matrix\r\n\t\t\t// description:\r\n\t\t\t//\t\tThe resulting matrix is used to scale (magnify) points by specified offsets.\r\n\t\t\t// a: Number\r\n\t\t\t//\t\ta scaling factor used for the x coordinate\r\n\t\t\t// b: Number?\r\n\t\t\t//\t\ta scaling factor used for the y coordinate\r\n\t\t\t// returns: Matrix\r\n\t\t\t//|----------| |-----------|\r\n\t\t\t//|m11|m21|dx| |  a|   0| 0|\r\n\t\t\t//|----------| |-----------|\r\n\t\t\t//|m12|m22|dy| |  0|   b| 0|\r\n\t\t\t//|----------| |-----------|\r\n\t\t\t//|  0|  0| 1| |  0|   0| 1|\r\n\t\t\t//|----------| |-----------|\r\n\t\t\treturn new Matrix(a,0,0,b?b:a,0,0); // Matrix\r\n\t\t},\r\n\t\trotate: function(angle){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tforms a rotating matrix\r\n\t\t\t// description:\r\n\t\t\t//\t\tThe resulting matrix is used to rotate points\r\n\t\t\t//\t\taround the origin of coordinates (0, 0) by specified angle.\r\n\t\t\t// angle: Number\r\n\t\t\t//\t\tan angle of rotation in radians (>0 for CW)\r\n\t\t\t// returns: Matrix\r\n\t\t\t//|----------| |-----------|\r\n\t\t\t//|m11|m21|dx| |cos|-sin| 0|\r\n\t\t\t//|----------| |-----------|\r\n\t\t\t//|m12|m22|dy| |sin| cos| 0|\r\n\t\t\t//|----------| |-----------|\r\n\t\t\t//|  0|  0| 1| |  0|   0| 1|\r\n\t\t\t//|----------| |-----------|\r\n\t\t\tvar cos = Math.cos(angle);\r\n\t\t\tvar sin = Math.sin(angle);\r\n\t\t\treturn new Matrix(cos,sin,-sin,cos,0,0); // Matrix\r\n\t\t},\r\n\t\trotateg: function(degree){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tforms a rotating matrix\r\n\t\t\t// description:\r\n\t\t\t//\t\tThe resulting matrix is used to rotate points\r\n\t\t\t//\t\taround the origin of coordinates (0, 0) by specified degree.\r\n\t\t\t//\t\tSeerotate() for comparison.\r\n\t\t\t// degree: Number\r\n\t\t\t//\t\tan angle of rotation in degrees (>0 for CW)\r\n\t\t\t// returns: Matrix\r\n\t\t\treturn this.rotate(degToRad(degree)); // Matrix\r\n\t\t},\r\n\t\tskewX: function(angle) {\r\n\t\t\t//TODO : will be modified\r\n\t\t\t// summary:\r\n\t\t\t//\t\tforms an x skewing matrix\r\n\t\t\t// description:\r\n\t\t\t//\t\tThe resulting matrix is used to skew points in the x dimension\r\n\t\t\t//\t\taround the origin of coordinates (0, 0) by specified angle.\r\n\t\t\t// angle: Number\r\n\t\t\t//\t\ta skewing angle in radians\r\n\t\t\t// returns: Matrix\r\n\t\t\t//|----------| |-----------|\r\n\t\t\t//|m11|m21|dx| |  1| tan| 0|\r\n\t\t\t//|----------| |-----------|\r\n\t\t\t//|m12|m22|dy| |  0|   1| 0|\r\n\t\t\t//|----------| |-----------|\r\n\t\t\t//|  0|  0| 1| |  0|   0| 1|\r\n\t\t\t//|----------| |-----------|\r\n\t\t\tvar tan = Math.tan(angle);\r\n\t\t\treturn new Matrix(1,0,tan,1); // Matrix\r\n\t\t},\r\n\t\tskewXg: function(degree){\r\n\t\t\t//TODO : will be modified\r\n\t\t\t// summary:\r\n\t\t\t//\t\tforms an x skewing matrix\r\n\t\t\t// description:\r\n\t\t\t//\t\tThe resulting matrix is used to skew points in the x dimension\r\n\t\t\t//\t\taround the origin of coordinates (0, 0) by specified degree.\r\n\t\t\t//\t\tSee dojox/gfx/matrix.skewX() for comparison.\r\n\t\t\t// degree: Number\r\n\t\t\t//\t\ta skewing angle in degrees\r\n\t\t\t// returns: Matrix\r\n\t\t\treturn this.skewX(degToRad(degree)); // dojox/gfx/matrix.Matrix\r\n\t\t},\r\n\t\tskewY: function(angle){\r\n\t\t\t//TODO : will be modified\r\n\t\t\t// summary:\r\n\t\t\t//\t\tforms a y skewing matrix\r\n\t\t\t// description:\r\n\t\t\t//\t\tThe resulting matrix is used to skew points in the y dimension\r\n\t\t\t//\t\taround the origin of coordinates (0, 0) by specified angle.\r\n\t\t\t// angle: Number\r\n\t\t\t//\t\ta skewing angle in radians\r\n\t\t\t// returns: Matrix\r\n\t\t\t//|----------| |-----------|\r\n\t\t\t//|m11|m21|dx| |  1|   0| 0|\r\n\t\t\t//|----------| |-----------|\r\n\t\t\t//|m12|m22|dy| |tan|   1| 0|\r\n\t\t\t//|----------| |-----------|\r\n\t\t\t//|  0|  0| 1| |  0|   0| 1|\r\n\t\t\t//|----------| |-----------|\r\n\t\t\tvar tan = Math.tan(angle);\r\n\r\n\t\t\treturn new Matrix(1,tan,0,1); // Matrix\r\n\t\t},\r\n\t\tskewYg: function(degree){\r\n\t\t\t//TODO : will be modified\r\n\t\t\t// summary:\r\n\t\t\t//\t\tforms a y skewing matrix\r\n\t\t\t// description:\r\n\t\t\t//\t\tThe resulting matrix is used to skew points in the y dimension\r\n\t\t\t//\t\taround the origin of coordinates (0, 0) by specified degree.\r\n\t\t\t//\t\tSee skewY() for comparison.\r\n\t\t\t// degree: Number\r\n\t\t\t//\t\ta skewing angle in degrees\r\n\t\t\t// returns: Matrix\r\n\t\t\treturn this.skewY(degToRad(degree)); // Matrix\r\n\t\t},\r\n\t\treflect: function(a, b){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tforms a reflection matrix\r\n\t\t\t// description:\r\n\t\t\t//\t\tThe resulting matrix is used to reflect points around a vector,\r\n\t\t\t//\t\twhich goes through the origin.\r\n\t\t\t// a: dojox/gfx.Point|Number\r\n\t\t\t//\t\ta point-like object, which specifies a vector of reflection, or an X value\r\n\t\t\t// b: Number?\r\n\t\t\t//\t\ta Y value\r\n\t\t\t// returns: Matrix\r\n\t\t\tif(arguments.length == 1){\r\n\t\t\t\tb = a.y;\r\n\t\t\t\ta = a.x;\r\n\t\t\t}\r\n\t\t\t// make a unit vector\r\n\t\t\tvar a2 = a * a, b2 = b * b, n2 = a2 + b2, \r\n\t\t\t\txx=2 * a2 / n2 - 1, \r\n\t\t\t\txy = 2 * a * b / n2,\r\n\t\t\t\tyx = xy,\r\n\t\t\t\tyy = 2 * b2 / n2 - 1;\r\n\t\t\treturn new Matrix(xx,yx,xy, yy); // Matrix\r\n\t\t},\r\n\t\tproject: function(a, b){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tforms an orthogonal projection matrix\r\n\t\t\t// description:\r\n\t\t\t//\t\tThe resulting matrix is used to project points orthogonally on a vector,\r\n\t\t\t//\t\twhich goes through the origin.\r\n\t\t\t// a:   Number\r\n\t\t\t//\t\tan x coordinate value\r\n\t\t\t// b: Number?\r\n\t\t\t//\t\ta y coordinate value\r\n\t\t\t// returns: Matrix\r\n\r\n\t\t\t// make a unit vector\r\n\t\t\tvar a2 = a * a, b2 = b * b, n2 = a2 + b2, \r\n\t\t\t\txx = a2 / n2,\r\n\t\t\t\txy = a * b / n2\r\n\t\t\t\tyx = xy,\r\n\t\t\t\tyy = b2 / n2;\r\n\t\t\treturn new Matrix(xx,yx,xy,yy); // Matrix\r\n\t\t},\r\n\r\n\t\t// common operations\r\n\r\n\t\t// high level operations\r\n\r\n\t\t_sandwich: function(matrix, x, y){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tapplies a matrix at a central point\r\n\t\t\t// matrix: Matrix\r\n\t\t\t//\t\ta 2D matrix-like object, which is applied at a central point\r\n\t\t\t// x: Number\r\n\t\t\t//\t\tan x component of the central point\r\n\t\t\t// y: Number\r\n\t\t\t//\t\ta y component of the central point\r\n\t\t\treturn this.translate(x, y).multiply(matrix)\r\n\t\t\t                           .multiply(this.translate(-x, -y)); // Matrix\r\n\t\t},\r\n\t\tscaleAt: function(a, b, c, d){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tscales a picture using a specified point as a center of scaling\r\n\t\t\t// description:\r\n\t\t\t//\t\tCompare with scale().\r\n\t\t\t// a: Number\r\n\t\t\t//\t\ta scaling factor used for the x coordinate, or a uniform scaling factor used for both coordinates\r\n\t\t\t// b: Number?\r\n\t\t\t//\t\ta scaling factor used for the y coordinate\r\n\t\t\t// c: Number|Point\r\n\t\t\t//\t\tan x component of a central point, or a central point\r\n\t\t\t// d: Number\r\n\t\t\t//\t\ta y component of a central point\r\n\t\t\t// returns: Matrix\r\n\t\t\tswitch(arguments.length){\r\n\t\t\t\tcase 4:\r\n\t\t\t\t\t// a and b are scale factor components, c and d are components of a point\r\n\t\t\t\t\treturn this._sandwich(this.scale(a, b), c, d); // Matrix\r\n\t\t\t\tcase 3:\r\n\t\t\t\t\tif(typeof c == \"number\"){\r\n\t\t\t\t\t\treturn this._sandwich(this.scale(a), b, c); // Matrix\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn this._sandwich(this.scale(a, b), c.x, c.y); // Matrix\r\n\t\t\t}\r\n\t\t\treturn this._sandwich(this.scale(a), b.x, b.y); // Matrix\r\n\t\t},\r\n\t\trotateAt: function(angle, a, b){\r\n\t\t\t// summary:\r\n\t\t\t//\t\trotates a picture using a specified point as a center of rotation\r\n\t\t\t// description:\r\n\t\t\t//\t\tCompare with rotate().\r\n\t\t\t// angle: Number\r\n\t\t\t//\t\tan angle of rotation in radians (>0 for CW)\r\n\t\t\t// a: Number|dojox/gfx.Point\r\n\t\t\t//\t\tan x component of a central point, or a central point\r\n\t\t\t// b: Number?\r\n\t\t\t//\t\ta y component of a central point\r\n\t\t\t// returns: Matrix\r\n\t\t\tif(arguments.length > 2){\r\n\t\t\t\treturn this._sandwich(this.rotate(angle), a, b); // Matrix\r\n\t\t\t}\r\n\t\t\treturn this._sandwich(this.rotate(angle), a.x, a.y); // Matrix\r\n\t\t},\r\n\t\trotategAt: function(degree, a, b){\r\n\t\t\t// summary:\r\n\t\t\t//\t\trotates a picture using a specified point as a center of rotation\r\n\t\t\t// description:\r\n\t\t\t//\t\tCompare with rotateg().\r\n\t\t\t// degree: Number\r\n\t\t\t//\t\tan angle of rotation in degrees (>0 for CW)\r\n\t\t\t// a: Number|dojox/gfx.Point\r\n\t\t\t//\t\tan x component of a central point, or a central point\r\n\t\t\t// b: Number?\r\n\t\t\t//\t\ta y component of a central point\r\n\t\t\t// returns: Matrix\r\n\t\t\tif(arguments.length > 2){\r\n\t\t\t\treturn this._sandwich(this.rotateg(degree), a, b); // Matrix\r\n\t\t\t}\r\n\t\t\treturn this._sandwich(this.rotateg(degree), a.x, a.y); // Matrix\r\n\t\t},\r\n\t\tskewXAt: function(angle, a, b){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tskews a picture along the x axis using a specified point as a center of skewing\r\n\t\t\t// description:\r\n\t\t\t//\t\tCompare with skewX().\r\n\t\t\t// angle: Number\r\n\t\t\t//\t\ta skewing angle in radians\r\n\t\t\t// a: Number|dojox/gfx.Point\r\n\t\t\t//\t\tan x component of a central point, or a central point\r\n\t\t\t// b: Number?\r\n\t\t\t//\t\ta y component of a central point\r\n\t\t\t// returns: Matrix\r\n\t\t\tif(arguments.length > 2){\r\n\t\t\t\treturn this._sandwich(this.skewX(angle), a, b); // Matrix\r\n\t\t\t}\r\n\t\t\treturn this._sandwich(this.skewX(angle), a.x, a.y); // Matrix\r\n\t\t},\r\n\t\tskewXgAt: function(degree, a, b){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tskews a picture along the x axis using a specified point as a center of skewing\r\n\t\t\t// description:\r\n\t\t\t//\t\tCompare with skewXg().\r\n\t\t\t// degree: Number\r\n\t\t\t//\t\ta skewing angle in degrees\r\n\t\t\t// a: Number|dojox/gfx.Point\r\n\t\t\t//\t\tan x component of a central point, or a central point\r\n\t\t\t// b: Number?\r\n\t\t\t//\t\ta y component of a central point\r\n\t\t\t// returns: Matrix\r\n\t\t\tif(arguments.length > 2){\r\n\t\t\t\treturn this._sandwich(this.skewXg(degree), a, b); // Matrix\r\n\t\t\t}\r\n\t\t\treturn this._sandwich(this.skewXg(degree), a.x, a.y); // Matrix\r\n\t\t},\r\n\t\tskewYAt: function(angle, a, b){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tskews a picture along the y axis using a specified point as a center of skewing\r\n\t\t\t// description:\r\n\t\t\t//\t\tCompare with skewY().\r\n\t\t\t// angle: Number\r\n\t\t\t//\t\ta skewing angle in radians\r\n\t\t\t// a: Number|dojox/gfx.Point\r\n\t\t\t//\t\tan x component of a central point, or a central point\r\n\t\t\t// b: Number?\r\n\t\t\t//\t\ta y component of a central point\r\n\t\t\t// returns: Matrix\r\n\t\t\tif(arguments.length > 2){\r\n\t\t\t\treturn this._sandwich(this.skewY(angle), a, b); // Matrix\r\n\t\t\t}\r\n\t\t\treturn this._sandwich(this.skewY(angle), a.x, a.y); // Matrix\r\n\t\t},\r\n\t\tskewYgAt: function(/* Number */ degree, /* Number||Point */ a, /* Number? */ b){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tskews a picture along the y axis using a specified point as a center of skewing\r\n\t\t\t// description:\r\n\t\t\t//\t\tCompare with skewYg().\r\n\t\t\t// degree: Number\r\n\t\t\t//\t\ta skewing angle in degrees\r\n\t\t\t// a: Number|dojox/gfx.Point\r\n\t\t\t//\t\tan x component of a central point, or a central point\r\n\t\t\t// b: Number?\r\n\t\t\t//\t\ta y component of a central point\r\n\t\t\t// returns: Matrix\r\n\t\t\tif(arguments.length > 2){\r\n\t\t\t\treturn this._sandwich(this.skewYg(degree), a, b); // Matrix\r\n\t\t\t}\r\n\t\t\treturn this._sandwich(this.skewYg(degree), a.x, a.y); // Matrix\r\n\t\t}\r\n\t\r\n\t\r\n\t});\r\n\r\n\treturn Matrix;\r\n});\r\n\ndefine('skylark-utils-math/transform/Transform',[\r\n    \"skylark-langx/langx\",\r\n    \"../math\",\r\n\t\"./Matrix\"\r\n], function(langx,math, Matrix) {\r\n\r\n    var Transform = math.Transform = langx.klass({\r\n        \"klassName\": \"Transform\",\r\n\t\t\"value\": {\r\n\t\t\tget : function(){\r\n\t\t\t\treturn this._.value;\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\treturn Transform;\r\n});\r\n\ndefine('skylark-utils-math/transform/MatrixTransform',[\r\n    \"skylark-langx/langx\",\r\n    \"../math\",\r\n\t\"./Transform\",\r\n\t\"../Point\",\r\n\t\"../Rect\"\r\n],function(langx,math,Transform,Point,Rect) {\r\n\r\n    var MatrixTransform = math.MatrixTransform = Transform.inherit({\r\n        \"klassName\": \"MatrixTransform\",\r\n\r\n\t\t\"value\"\t:\t{\r\n\t\t\tget : function(){\r\n\t\t\t\treturn this.matrix.clone();\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\t\"matrix\" : {\r\n\t\t\tget : function(){\r\n\t\t\t\treturn this._.matrix;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tclone : /*ScaleTransform*/function() {\r\n\t\t},\r\n\t\t\r\n\t\ttransform : /*Point*/function(/*Point*/point) {\r\n\t\t},\r\n\t\t\r\n\t\t//�w�肳�ꂽ���E�{�b�N�X���ϊ����A���������傤�Ǌi�[�ł����傫���̎����s���E�{�b�N�X���Ԃ��܂��B\r\n\t\ttransformBounds : /*Rect*/function(/*Rect*/rect) {\r\n\t\t},\t\t\r\n\t\t\"initialize\" : function(/*Martix*/matrix) {\r\n            var _ = this._;\r\n\t\t\t\r\n\t\t\t_.matrix = matrix;\r\n\t\t}\r\n\t\t\t\t\r\n\t});\r\n\r\n\treturn MatrixTransform;\r\n\t\r\n});\t\r\n\ndefine('skylark-utils-math/transform/RotateTransform',[\r\n    \"skylark-langx/langx\",\r\n    \"../math\",\r\n\t\"./Transform\",\r\n\t\"./Matrix\",\r\n\t\"../Point\",\r\n\t\"../Rect\"\r\n],function(langx,math,Transform,Matrix,Point,Rect) {\r\n\r\n\r\n    var RotateTransform = math.RotateTransform = Transform.inherit({\r\n        \"klassName\": \"RotateTransform\",\r\n\r\n        \"value\": {\r\n            get: function() {\r\n                return Matrix.rotateAt(this.angle, this.centerX, this.centerY);\r\n            }\r\n        },\r\n\r\n        \"angle\": {\r\n            get : function() {\r\n                return this._.angle;\r\n            }\r\n        },\r\n        // cy: Number\r\n        //\t\tThe Y coordinate of the center of the circle, default value 0.\r\n        \"centerX\": {\r\n            get : function() {\r\n                return this._.centerX;\r\n            }\r\n        },\r\n        // r: Number\r\n        //\t\tThe radius, default value 100.\r\n        \"centerY\": {\r\n            get : function() {\r\n                return this._.centerY;\r\n            }\r\n        },\r\n\r\n\t\tclone : /*ScaleTransform*/function() {\r\n\t\t},\r\n\t\t\r\n\t\ttransform : /*Point*/function(/*Point*/point) {\r\n\t\t},\r\n\t\t\r\n\t\ttransformBounds : /*Rect*/function(/*Rect*/rect) {\r\n\t\t},\r\n\t\t\r\n\t\t\"init\" : function(/*Number*/angle,/*Number*/centerX,/*Number*/centerY) {\r\n\t\t\tvar _ = this._ = {};\r\n\t\t\t_.angle = angle ? angle :0;\r\n\t\t\t_.centerX = centerX ? centerX :0;\r\n\t\t\t_.centerY = centerY ? centerY :0;\r\n\t\t}\r\n\t});\r\n\r\n\treturn RotateTransform;\r\n\t\r\n});\t\r\n\ndefine('skylark-utils-math/transform/ScaleTransform',[\r\n    \"skylark-langx/langx\",\r\n    \"../math\",\r\n    \"./Transform\",\r\n    \"./Matrix\",\r\n    \"../Point\",\r\n    \"../Rect\"\r\n], function(langx,math, Transform, Matrix, Point, Rect) {\r\n\r\n   var ScaleTransform = math.ScaleTransform = Transform.inherit({\r\n        \"klassName\": \"ScaleTransform\",\r\n\r\n        \"value\": {\r\n            get: function() {\r\n                    return Matrix.scaleAt(this.scaleX, this.scaleY, this.centerX, this.centerY);\r\n            }\r\n        },\r\n\r\n        \"scaleX\": {\r\n            get : function() {\r\n                return this._.scaleX;\r\n            }\r\n        },\r\n\r\n        \"scaleY\": {\r\n            get : function() {\r\n                return this._.scaleY;\r\n            }\r\n        },\r\n\r\n        // cy: Number\r\n        //      The Y coordinate of the center of the circle, default value 0.\r\n        \"centerX\": {\r\n            get : function() {\r\n                return this._.centerX;\r\n            }\r\n        },\r\n        // r: Number\r\n        //      The radius, default value 100.\r\n        \"centerY\": {\r\n            get : function() {\r\n                return this._.centerY;\r\n            }\r\n        },\r\n\r\n        clone: /*ScaleTransform*/ function() {},\r\n\r\n        transform: /*Point*/ function( /*Point*/ point) {},\r\n\r\n        transformBounds: /*Rect*/ function( /*Rect*/ rect) {},\r\n\r\n        \"init\": function( /*Number*/ scaleX, /*Number*/ scaleY, /*Number*/ centerX, /*Number*/ centerY) {\r\n            var _ = this._;\r\n\r\n            _.scaleX = scaleX ? scaleX : 1;\r\n            _.scaleY = scaleY ? scaleY : 1;\r\n            _.centerX = centerX ? centerX : 0;\r\n            _.centerY = centerY ? centerY : 0;\r\n        }\r\n    });\r\n\r\n    return ScaleTransform;\r\n\r\n});\r\n\ndefine('skylark-utils-math/transform/SkewTransform',[\r\n    \"skylark-langx/langx\",\r\n    \"../math\",\r\n    \"./Transform\",\r\n    \"./Matrix\",\r\n    \"../Point\",\r\n    \"../Rect\"\r\n], function(Class, Transform, Matrix, Point, Rect) {\r\n\r\n   var SkewTransform = math.SkewTransform = Transform.inherit({\r\n        \"klassName\": \"SkewTransform\",\r\n\r\n        \"value\": {\r\n            get: function() {\r\n                    return Matrix.scaleAt(this.skewX, this.skewY);\r\n            }\r\n        },\r\n\r\n        \"skewX\": {\r\n            get : function() {\r\n                return this._.skewX;\r\n            }\r\n        },\r\n\r\n        \"skewY\": {\r\n            get : function() {\r\n                return this._.skewY;\r\n            }\r\n        },\r\n\r\n        clone: /*SkewTransform*/ function() {},\r\n\r\n        transform: /*Point*/ function( /*Point*/ point) {},\r\n\r\n        transformBounds: /*Rect*/ function( /*Rect*/ rect) {},\r\n\r\n        \"init\": function( /*Number*/ skewX, /*Number*/ skewY) {\r\n            var _ = this._;\r\n\r\n            _.skewX = skewX ? skewX : 0;\r\n            _.skewY = skewY ? skewY : 0;\r\n        }\r\n    });\r\n\r\n    return SkewTransform;\r\n\r\n});\r\n\ndefine('skylark-utils-math/transform/TranslateTransform',[\r\n    \"skylark-langx/langx\",\r\n    \"../math\",\r\n    \"./Transform\",\r\n    \"./Matrix\",\r\n    \"../Point\",\r\n    \"../Rect\"\r\n],function(langx,math,Transform,Matrix,Point,Rect) {\r\n\r\n    //|1   0   dx|\r\n    //|0   1   dy|\r\n    //|0   0    1|\r\n\r\n   var TranslateTransform = math.TranslateTransform = Transform.inherit({\r\n        \"klassName\": \"TranslateTransform\",\r\n\r\n        \"value\": {\r\n            get: function() {\r\n                    return Matrix.scaleAt(this.x, this.y);\r\n            }\r\n        },\r\n\r\n        \"x\": {\r\n            get : function() {\r\n                return this._.x;\r\n            }\r\n        },\r\n\r\n        \"y\": {\r\n            get : function() {\r\n                return this._.y;\r\n            }\r\n        },\r\n\r\n        clone: /*SkewTransform*/ function() {},\r\n\r\n        transform: /*Point*/ function( /*Point*/ point) {},\r\n\r\n        transformBounds: /*Rect*/ function( /*Rect*/ rect) {},\r\n\r\n        \"init\": function( /*Number*/ x, /*Number*/ y) {\r\n            var _ = this._;\r\n\r\n            _.x = x ? x : 0;\r\n            _.y = y ? y : 0;\r\n        }\r\n    });\r\n\r\n    return TranslateTransform;\r\n\r\n\tvar TranslateTransform = Class.declare(Transform,{\r\n\t\t\"-parent-\"\t:\tTransform,\r\n\t\t\r\n\t\t\"-module-\"\t:\t\"qface/geom/transform/TranslateTransform\",\r\n\r\n\t\t\"-protected-\" : {\r\n\t\t\t\"-methods-\"\t:\t{\r\n\t\t\t\t_valueGetter : function(){\r\n\t\t\t\t\treturn Matrix.translate(this.x,this.y);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t\"-public-\" : {\r\n\t\t\t\"-attributes-\" : {\r\n\t\t\t\t//x ���ɉ����ĕ��s�ړ����鋗�����擾�܂��͐ݒ肵�܂��B\r\n\t\t\t\t\"x\" : {\r\n\t\t\t\t\ttype : Number,\r\n\t\t\t\t\treadOnly : true\r\n\t\t\t\t},\r\n\t\t\t\t//y ���ɉ����ăI�u�W�F�N�g���ϊ� (�ړ�) ���鋗�����擾�܂��͐ݒ肵�܂��B\r\n\t\t\t\t\"y\" : {\r\n\t\t\t\t\ttype : Number,\r\n\t\t\t\t\treadOnly : true\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t\"-methods-\"\t:\t{\r\n\t\t\t\t//���� ScaleTransform �̒l�̏ڍ׃R�s�[���쐬���ĕԂ��܂��B\r\n\t\t\t\tclone : /*ScaleTransform*/function() {\r\n\t\t\t\t},\r\n\t\t\t\t\r\n\t\t\t\t//�w�肵���_���ϊ����A���ʂ��Ԃ��܂��B\r\n\t\t\t\ttransform : /*Point*/function(/*Point*/point) {\r\n\t\t\t\t},\r\n\t\t\t\t\r\n\t\t\t\t//�w�肳�ꂽ���E�{�b�N�X���ϊ����A���������傤�Ǌi�[�ł����傫���̎����s���E�{�b�N�X���Ԃ��܂��B\r\n\t\t\t\ttransformBounds : /*Rect*/function(/*Rect*/rect) {\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t\"-constructor-\"\t:\t{\t\t\r\n\t\t\t\"initialize\" : function(x,y) {\r\n\t\t\t\tthis._x = x ? x :0;\r\n\t\t\t\tthis._y = y ? y :0;\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\treturn TranslateTransform;\r\n\t\r\n});\t\r\n\ndefine('skylark-utils-math/main',[\r\n    \"./math\",\r\n    \"./Arrow\",\r\n    \"./Circle\",\r\n    \"./Ellipse\",\r\n    \"./Geometry\",\r\n    \"./Line\",\r\n    \"./Point\",\r\n    \"./Polyline\",\r\n    \"./PolyStar\",\r\n    \"./Rect\",\r\n    \"./Size\",\r\n    \"./transform/Matrix\",\r\n    \"./transform/MatrixTransform\",\r\n    \"./transform/RotateTransform\",\r\n    \"./transform/ScaleTransform\",\r\n    \"./transform/SkewTransform\",\r\n    \"./transform/Transform\",\r\n    \"./transform/TranslateTransform\"\r\n], function(math) {\r\n\r\n\treturn math;\r\n});\ndefine('skylark-utils-math', ['skylark-utils-math/main'], function (main) { return main; });\n\n"]}