{"version":3,"sources":["Circle.js"],"names":["define","langx","math","Geometry","Circle","inherit","klassName","bounds","get","_","this","box","x","cx","r","y","cy","width","height","move","dx","dy","containPoint","undefined","p","diff","init"],"mappings":";;;;;;;AAAAA,QACI,sBACA,SACA,cACD,SAASC,EAAOC,EAAMC,GAErB,GAAIC,GAASF,EAAKE,OAASD,EAASE,SAChCC,UAAa,SAEbC,QACIC,IAAM,WAGF,GAAIC,GAAIC,KAAKD,EACTE,GACIC,EAAGH,EAAEI,GAAKJ,EAAEK,EACZC,EAAGN,EAAEO,GAAKP,EAAEK,EACZG,MAAO,EAAIR,EAAEK,EACbI,OAAQ,EAAIT,EAAEK,EAEtB,OAAOH,KAMfE,IACIL,IAAM,WACF,MAAOE,MAAKD,EAAEI,KAKtBG,IACIR,IAAM,WACF,MAAOE,MAAKD,EAAEO,KAKtBF,GACIN,IAAM,WACF,MAAOE,MAAKD,EAAEK,IAGtBK,KAAM,SAASC,EAAIC,GACf,GAAIZ,GAAIC,KAAKD,CACb,OAAO,IAAIL,GAAOK,EAAEI,GAAKO,EAAGX,EAAEO,GAAKK,EAAGZ,EAAEK,IAE5CQ,aAAc,SAASV,EAAEG,GAErB,GAAUQ,SAANR,EAAiB,CACjB,GAAIS,GAAIZ,CACRA,GAAIY,EAAEZ,EACNG,EAAIS,EAAET,EAEV,GAAIN,GAAIC,KAAKD,EAETgB,GAAQb,EAAIH,EAAEG,IAAMA,EAAIH,EAAEG,IAAMG,EAAIN,EAAEM,IAAMA,EAAIN,EAAEM,EACtD,OAAIU,GAAOhB,EAAEK,EAAIL,EAAEK,GAKvBY,KAAS,SAASb,EAAIG,EAAIF,GACtB,GAAIL,GAAIC,KAAKD,IACbA,GAAEI,GAAKA,GAAM,EACbJ,EAAEO,GAAKA,GAAM,EACbP,EAAEK,EAAIA,GAAK,IAKnB,OAAOV","file":"../Circle.js","sourcesContent":["define([\r\n    \"skylark-langx/langx\",\r\n    \"./math\",\r\n    \"./Geometry\"\r\n], function(langx, math, Geometry) {\r\n\r\n    var Circle = math.Circle = Geometry.inherit({\r\n        \"klassName\": \"Circle\",\r\n\r\n        \"bounds\": {\r\n            get : function() {\r\n                // summary:\r\n                //      returns the bounding box\r\n                var _ = this._,\r\n                    box = {\r\n                        x: _.cx - _.r,\r\n                        y: _.cy - _.r,\r\n                        width: 2 * _.r,\r\n                        height: 2 * _.r\r\n                    };\r\n                return box;\r\n            }\r\n        },\r\n\r\n        // cx: Number\r\n        //\t\tThe X coordinate of the center of the circle, default value 0.\r\n        \"cx\": {\r\n            get : function() {\r\n                return this._.cx;\r\n            }\r\n        },\r\n        // cy: Number\r\n        //\t\tThe Y coordinate of the center of the circle, default value 0.\r\n        \"cy\": {\r\n            get : function() {\r\n                return this._.cy;\r\n            }\r\n        },\r\n        // r: Number\r\n        //\t\tThe radius, default value 100.\r\n        \"r\": {\r\n            get : function() {\r\n                return this._.r;\r\n            }\r\n        },\r\n        move: function(dx, dy) {\r\n            var _ = this._;            \r\n            return new Circle(_.cx + dx,_.cy + dy,_.r);\r\n        },\r\n        containPoint: function(x,y) {\r\n            // support function(p)\r\n            if (y === undefined) {\r\n                var p = x;\r\n                x = p.x;\r\n                y = p.y;\r\n            }\r\n            var _ = this._;\r\n\r\n            var diff = (x - _.x) * (x - _.x) + (y - _.y) * (y - _.y);\r\n            if (diff < _.r * _.r) {\r\n                return true;\r\n            }\r\n            return false;\r\n        },\r\n        \"init\" : function(cx, cy, r) {\r\n            var _ = this._ = {};\r\n            _.cx = cx || 0;\r\n            _.cy = cy || 0;\r\n            _.r = r || 0;\r\n        }\r\n\r\n    });\r\n\r\n    return Circle;\r\n});\r\n"]}