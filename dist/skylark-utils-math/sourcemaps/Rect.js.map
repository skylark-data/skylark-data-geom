{"version":3,"sources":["Rect.js"],"names":["define","langx","math","Geometry","Point","Size","Rect","inherit","klassName","bounds","get","_","this","box","x","y","width","height","radius","leftTop","leftBottom","rightTop","rightBottom","size","move","dx","dy","containPoint","undefined","p","isEmpty","notEqual","r","equal","isIntersect","x2","y2","width2","height2","x1","y1","width1","height1","Math","min","intersect","unite","max","clone","init","fromString","s","a","split","parseFloat","fromPlain","o","l","t","w","h","fromArray","Zero"],"mappings":";;;;;;;AAAAA,QACI,sBACA,SACA,aACA,UACH,UACC,SAASC,EAAOC,EAAMC,EAASC,EAAMC,GAEnC,GAAIC,GAAOJ,EAAKI,KAAOH,EAASI,SAC5BC,UAAa,OACbC,QACIC,IAAM,WAGF,GACIC,GAAIC,KAAKD,EACTE,GACAC,EAAGH,EAAEG,EACLC,EAAGH,KAAKG,EACRC,MAAOL,EAAEK,MACTC,OAAQN,EAAEM,OAEd,OAAOJ,KAGhBC,GACKJ,IAAM,WACF,MAAOE,MAAKD,EAAEG,IAKtBC,GACIL,IAAM,WACF,MAAOE,MAAKD,EAAEI,IAKtBC,OACIN,IAAM,WACF,MAAOE,MAAKD,EAAEK,QAKtBC,QACIP,IAAM,WACF,MAAOE,MAAKD,EAAEM,SAKtBC,QACIR,IAAM,WACF,MAAOE,MAAKD,EAAEO,SAGtBC,SACIT,IAAK,WACD,GAAIC,GAAIC,KAAKD,CACb,OAAO,IAAIP,GAAMO,EAAEG,EAAGH,EAAEI,KAGhCK,YACIV,IAAK,WACD,GAAIC,GAAIC,KAAKD,CACb,OAAO,IAAIP,GAAMO,EAAEG,EAAGH,EAAEI,EAAIJ,EAAEM,UAGtCI,UACIX,IAAK,WACD,GAAIC,GAAIC,KAAKD,CACb,OAAO,IAAIP,GAAMO,EAAEG,EAAIH,EAAEK,MAAOL,EAAEI,KAG1CO,aACIZ,IAAK,WACD,GAAIC,GAAIC,KAAKD,CACb,OAAO,IAAIP,GAAMO,EAAEG,EAAIH,EAAEK,MAAOL,EAAEI,EAAIJ,EAAEM,UAIhDM,MACIb,IAAK,WACD,GAAIC,GAAIC,KAAKD,CACb,OAAO,IAAIN,GAAKM,EAAEK,MAAOL,EAAEM,UAInCO,KAAQ,SAASC,EAAIC,GACjB,GAAIf,GAAIC,KAAKD,CACb,OAAO,IAAIL,GAAKK,EAAEG,EAAIW,EAAGd,EAAEI,EAAIW,EAAGf,EAAEK,MAAML,EAAEM,OAAON,EAAEO,SAGzDS,aAAgB,SAASb,EAAEC,GAEvB,GAAUa,SAANb,EAAiB,CACjB,GAAIc,GAAIf,CACRA,GAAIe,EAAEf,EACNC,EAAIc,EAAEd,EAEV,GAAIJ,GAAIC,KAAKD,CAEb,OAAQG,IAAKH,EAAEG,GAAOA,EAAIH,EAAEG,EAAIH,EAAEK,OAAWD,GAAKJ,EAAEI,GAAOA,EAAIJ,EAAEI,EAAIJ,EAAEM,QAGjFa,QAAY,WACX,MAAOlB,MAAKI,OAAQ,GAAKJ,KAAKK,QAAQ,GAGvCc,SAAa,SAAiBC,GAC7B,OAAQA,GAAKA,EAAElB,GAAKF,KAAKE,GAAKkB,EAAEjB,GAAKH,KAAKG,GAAKiB,EAAEhB,OAASJ,KAAKI,OAASgB,EAAEf,QAAUL,KAAKK,QAAUe,EAAEd,QAAUN,KAAKM,QAGrHe,MAAU,SAAiBD,GAC1B,OAASpB,KAAKmB,SAASC,IAGxBE,YAAe,SAAmBC,EAAaC,EAAaC,EAAiBC,GAC5E,GAAIC,GAAK3B,KAAK2B,GAAGC,EAAG5B,KAAKG,EAAE0B,EAAO7B,KAAKI,MAAM0B,EAAQ9B,KAAKK,MAEvD,OAAQ0B,MAAKC,IAAIL,EAAKE,EAAQN,EAAKE,IAAWE,EAAKJ,EAAKI,EAAKJ,GAAO,GAC5DQ,KAAKC,IAAIJ,EAAKE,EAASN,EAAKE,IAAYE,EAAKJ,EAAKI,EAAKJ,GAAO,GAG1ES,UAAc,SAAmBV,EAAaC,EAAaC,EAAiBC,GAC3E,GAAIC,GAAK3B,KAAK2B,GAAGC,EAAG5B,KAAKG,EAAE0B,EAAO7B,KAAKI,MAAM0B,EAAQ9B,KAAKK,MAEvD,OAAQ0B,MAAKC,IAAIL,EAAKE,EAAQN,EAAKE,IAAWE,EAAKJ,EAAKI,EAAKJ,GAAO,GAC5DQ,KAAKC,IAAIJ,EAAKE,EAASN,EAAKE,IAAYE,EAAKJ,EAAKI,EAAKJ,GAAO,GAG1EU,MAAU,SAAmBX,EAAaC,EAAaC,EAAiBC,GACvE,GAAIC,GAAK3B,KAAK2B,GAAGC,EAAG5B,KAAKG,EAAE0B,EAAO7B,KAAKI,MAAM0B,EAAQ9B,KAAKK,OAEtDH,EAAIyB,EAAKJ,EAAKI,EAAKJ,EACtBpB,EAAIyB,EAAKJ,EAAKI,EAAKJ,EACnBpB,EAAS2B,KAAKI,IAAIR,EAAKE,EAAQN,EAAKE,GAAUvB,CAG5C,OAFFG,QAAS0B,KAAKI,IAAIP,EAAKE,EAASN,EAAKE,GAAWvB,EAEvC,GAAIT,GAAKQ,EAAEC,EAAEC,EAAMC,SAG9B+B,MAAU,WACT,GAAIrC,GAAIC,KAAKD,CACb,OAAO,IAAIL,GAAKK,EAAEG,EAAEH,EAAEI,EAAEJ,EAAEK,MAAML,EAAEM,OAAON,EAAEO,SAGtC+B,KAAS,SAASnC,EAAGC,EAAGC,EAAOC,EAAQC,GACnC,GAAIP,GAAIC,KAAKD,IACbA,GAAEG,EAAIA,GAAK,EACXH,EAAEI,EAAIA,GAAK,EACXJ,EAAEK,MAAQA,GAAS,EACnBL,EAAEM,OAASA,GAAU,EACrBN,EAAEO,OAASA,GAAU,IAoBhC,OAfAZ,GAAK4C,WAAa,SAASC,GAC1B,GAAIC,GAAID,EAAEE,MAAM,IAChB,OAAO,IAAI/C,GAAKgD,WAAWF,EAAE,IAAIE,WAAWF,EAAE,IAAIE,WAAWF,EAAE,IAAIE,WAAWF,EAAE,MAGjF9C,EAAKiD,UAAY,SAASC,GACzB,MAAO,IAAIlD,GAAKkD,EAAE1C,GAAK0C,EAAEC,EAAED,EAAEzC,GAAKyC,EAAEE,EAAGF,EAAEG,GAAKH,EAAExC,MAAMwC,EAAEI,GAAKJ,EAAEvC,SAGhEX,EAAKuD,UAAY,SAAST,GACzB,MAAO,IAAI9C,GAAK8C,EAAE,GAAGA,EAAE,GAAGA,EAAE,GAAGA,EAAE,KAGlC9C,EAAKwD,KAAO,GAAIxD,GAAK,EAAE,EAAE,EAAE,GAEpBA","file":"../Rect.js","sourcesContent":["define([\r\n    \"skylark-langx/langx\",\r\n    \"./math\",\r\n    \"./Geometry\",\r\n    \"./Point\",\r\n\t\"./Size\"\r\n],function(langx, math, Geometry,Point,Size) {\r\n\r\n    var Rect = math.Rect = Geometry.inherit({\r\n        \"klassName\": \"Rect\",\r\n        \"bounds\": {\r\n            get : function() {\r\n                // summary:\r\n                //\t\treturns the bounding box\r\n                var \r\n                    _ = this._,\r\n                    box = {\r\n                    x: _.x,\r\n                    y: this.y,\r\n                    width: _.width,\r\n                    height: _.height\r\n                };\r\n                return box;\r\n            }\r\n        },\r\n       \"x\": {\r\n            get : function() {\r\n                return this._.x;\r\n            }\r\n        },\r\n        // y: Number\r\n        //\t\tThe Y coordinate of the default rectangle's position, value 0.\r\n        \"y\": {\r\n            get : function() {\r\n                return this._.y;\r\n            }\r\n        },\r\n        // width: Number\r\n        //\t\tThe width of the default rectangle, value 100.\r\n        \"width\": {\r\n            get : function() {\r\n                return this._.width;\r\n            }\r\n        },\r\n        // height: Number\r\n        //\t\tThe height of the default rectangle, value 100.\r\n        \"height\": {\r\n            get : function() {\r\n                return this._.height;\r\n            }\r\n        },\r\n        // r: Number\r\n        //\t\tThe corner radius for the default rectangle, value 0.\r\n        \"radius\": {\r\n            get : function() {\r\n                return this._.radius;\r\n            }\r\n        },\r\n        \"leftTop\": {\r\n            get: function() {\r\n                var _ = this._;\r\n                return new Point(_.x, _.y);\r\n            }\r\n        },\r\n        \"leftBottom\": {\r\n            get: function() {\r\n                var _ = this._;\r\n                return new Point(_.x, _.y + _.height);\r\n            }\r\n        },\r\n        \"rightTop\": {\r\n            get: function() {\r\n                var _ = this._;\r\n                return new Point(_.x + _.width, _.y);\r\n            }\r\n        },\r\n        \"rightBottom\": {\r\n            get: function() {\r\n                var _ = this._;\r\n                return new Point(_.x + _.width, _.y + _.height);\r\n            }\r\n        },\r\n\r\n        \"size\": {\r\n            get: function() {\r\n                var _ = this._;\r\n                return new Size(_.width, _.height);\r\n            }\r\n        },\r\n\r\n        \"move\": function(dx, dy) {\r\n            var _ = this._;\r\n            return new Rect(_.x + dx,_.y + dy,_.width,_.height,_.radius);\r\n        },\r\n\r\n        \"containPoint\": function(x,y) {\r\n            // support function(p)\r\n            if (y === undefined) {\r\n                var p = x;\r\n                x = p.x;\r\n                y = p.y;\r\n            }\r\n            var _ = this._;\r\n\r\n            return (x >= _.x) && (x < _.x + _.width) && (y >= _.y) && (y < _.y + _.height);\r\n        },\r\n\r\n\t\t\"isEmpty\"\t:\tfunction(){\r\n\t\t\treturn this.width <=0 || this.height<=0;\r\n\t\t},\r\n\t\t\r\n\t\t\"notEqual\"\t:\tfunction(/*Rect*/r) {\r\n\t\t\treturn !r || r.x != this.x || r.y != this.y || r.width != this.width || r.height != this.height || r.radius != this.radius;\r\n\t\t},\r\n\t\t\r\n\t\t\"equal\"\t:\tfunction(/*Rect*/r){\r\n\t\t\treturn  !this.notEqual(r);\r\n\t\t},\r\n\t\t\r\n\t\t\"isIntersect\"\t:function(/*Number*/x2,/*Number*/y2,/*Number*/width2,/*Number*/height2){\r\n\t\t\tvar x1 = this.x1,y1=this.y,width1=this.width,height1=this.height;\r\n\t\t\t \r\n\t\t    return (Math.min(x1 + width1, x2 + width2) - (x1 > x2 ? x1 : x2)) > 0 &&\r\n\t\t           (Math.min(y1 + height1, y2 + height2) - (y1 > y2 ? y1 : y2)) > 0;\r\n\t\t},\r\n\t\t\r\n\t\t\"intersect\"\t:\tfunction(/*Number*/x2,/*Number*/y2,/*Number*/width2,/*Number*/height2){\r\n\t\t\tvar x1 = this.x1,y1=this.y,width1=this.width,height1=this.height;\r\n\t\t\t \r\n\t\t    return (Math.min(x1 + width1, x2 + width2) - (x1 > x2 ? x1 : x2)) > 0 &&\r\n\t\t           (Math.min(y1 + height1, y2 + height2) - (y1 > y2 ? y1 : y2)) > 0;\r\n\t\t},\r\n\t\t\t\t\t\t\r\n\t\t\"unite\"\t: function(/*Number*/x2,/*Number*/y2,/*Number*/width2,/*Number*/height2){\r\n\t\t\tvar x1 = this.x1,y1=this.y,width1=this.width,height1=this.height;\r\n\t\t\t \r\n\t\t\tvar x = x1 < x2 ? x1 : x2,\r\n\t\t\t\ty = y1 < y2 ? y1 : y2,\r\n\t\t\t\twidth  = Math.max(x1 + width1, x2 + width2) - x;\r\n\t\t\t\theight = Math.max(y1 + height1, y2 + height2) - y;\r\n\t\t    \r\n\t\t    return new Rect(x,y,width,height);\r\n\t\t},\r\n\t\t\r\n\t\t\"clone\"\t: function(){\r\n\t\t\tvar _ = this._;\r\n\t\t\treturn new Rect(_.x,_.y,_.width,_.height,_.radius);\r\n\t\t},\r\n\r\n        \"init\" : function(x, y, width, height, radius) {\r\n            var _ = this._ = {};\r\n            _.x = x || 0;\r\n            _.y = y || 0;\r\n            _.width = width || 0;\r\n            _.height = height || 0;\r\n            _.radius = radius || 0;\r\n        }\r\n    });\r\n\r\n\r\n\tRect.fromString = function(s) {\r\n\t\tvar a = s.split(\",\");\r\n\t\treturn new Rect(parseFloat(a[0]),parseFloat(a[1]),parseFloat(a[2]),parseFloat(a[3]));\r\n\t};\r\n\r\n\tRect.fromPlain = function(o) {\r\n\t\treturn new Rect(o.x || o.l,o.y || o.t, o.w || o.width,o.h || o.height);\r\n\t};\r\n\r\n\tRect.fromArray = function(a) {\r\n\t\treturn new Rect(a[0],a[1],a[2],a[3]);\r\n\t};\r\n\t\r\n\tRect.Zero = new Rect(0,0,0,0);\r\n\t\r\n\treturn Rect;\r\n\t\r\n});\t\r\n"]}