{"version":3,"sources":["Arrow.js"],"names":["define","langx","math","Geometry","Point","Direction","left","top","right","bottom","Arrow","inherit","klassName","bounds","get","_","this","box","x","y","width","height","direction","leftTop","leftBottom","rightTop","rightBottom","move","dx","dy","containPoint","undefined","p","init"],"mappings":";;;;;;;AAAAA,QACI,sBACA,SACA,aACA,WACD,SAASC,EAAOC,EAAMC,EAAUC,GAC/B,GAAIC,IACAC,KAAS,EACTC,IAAQ,EACRC,MAAU,EACVC,OAAW,GAGXC,EAAQR,EAAKQ,MAAQP,EAASQ,SAC9BC,UAAa,QACbC,QACIC,IAAM,WAGF,GACIC,GAAIC,KAAKD,EACTE,GACAC,EAAGH,EAAEG,EACLC,EAAGH,KAAKG,EACRC,MAAOL,EAAEK,MACTC,OAAQN,EAAEM,OAEd,OAAOJ,KAGhBC,GACKJ,IAAM,WACF,MAAOE,MAAKD,EAAEG,IAKtBC,GACIL,IAAM,WACF,MAAOE,MAAKD,EAAEI,IAKtBC,OACIN,IAAM,WACF,MAAOE,MAAKD,EAAEK,QAKtBC,QACIP,IAAM,WACF,MAAOE,MAAKD,EAAEM,SAKtBC,WACIR,IAAM,WACF,MAAOE,MAAKD,EAAEO,YAGtBC,SACIT,IAAK,WACD,GAAIC,GAAIC,KAAKD,CACb,OAAO,IAAIX,GAAMW,EAAEG,EAAGH,EAAEI,KAGhCK,YACIV,IAAK,WACD,GAAIC,GAAIC,KAAKD,CACb,OAAO,IAAIX,GAAMW,EAAEG,EAAGH,EAAEI,EAAIJ,EAAEM,UAGtCI,UACIX,IAAK,WACD,GAAIC,GAAIC,KAAKD,CACb,OAAO,IAAIX,GAAMW,EAAEG,EAAIH,EAAEK,MAAOL,EAAEI,KAG1CO,aACIZ,IAAK,WACD,GAAIC,GAAIC,KAAKD,CACb,OAAO,IAAIX,GAAMW,EAAEG,EAAIH,EAAEK,MAAOL,EAAEI,EAAIJ,EAAEM,UAGhDM,KAAQ,SAASC,EAAIC,GACjB,GAAId,GAAIC,KAAKD,CACb,OAAO,IAAIL,GAAMK,EAAEG,EAAIU,EAAGb,EAAEI,EAAIU,EAAGd,EAAEK,MAAML,EAAEM,OAAON,EAAEO,YAE1DQ,aAAgB,SAASZ,EAAEC,GAEvB,GAAUY,SAANZ,EAAiB,CACjB,GAAIa,GAAId,CACRA,GAAIc,EAAEd,EACNC,EAAIa,EAAEb,EAEV,GAAIJ,GAAIC,KAAKD,CAEb,OAAQG,IAAKH,EAAEG,GAAOA,EAAIH,EAAEG,EAAIH,EAAEK,OAAWD,GAAKJ,EAAEI,GAAOA,EAAIJ,EAAEI,EAAIJ,EAAEM,QAE3EY,KAAS,SAASf,EAAGC,EAAGC,EAAOC,EAAQC,GACnC,GAAIP,GAAIC,KAAKD,IACbA,GAAEG,EAAIA,GAAK,EACXH,EAAEI,EAAIA,GAAK,EACXJ,EAAEK,MAAQA,GAAS,EACnBL,EAAEM,OAASA,GAAU,EACrBN,EAAEO,UAAYA,GAAajB,EAAUE,MAM7C,OAFAG,GAAML,UAAYA,EAEXK","file":"../Arrow.js","sourcesContent":["define([\r\n    \"skylark-langx/langx\",\r\n    \"./math\",\r\n    \"./Geometry\",\r\n    \"./Point\"\r\n], function(langx, math, Geometry, Point) {\r\n    var Direction = {\r\n        \"left\" : 1,\r\n        \"top\" : 2,\r\n        \"right\" : 3, \r\n        \"bottom\" : 4\r\n    };\r\n\r\n    var Arrow = math.Arrow = Geometry.inherit({\r\n        \"klassName\": \"Arrow\",\r\n        \"bounds\": {\r\n            get : function() {\r\n                // summary:\r\n                //\t\treturns the bounding box\r\n                var \r\n                    _ = this._,\r\n                    box = {\r\n                    x: _.x,\r\n                    y: this.y,\r\n                    width: _.width,\r\n                    height: _.height\r\n                };\r\n                return box;\r\n            }\r\n        },\r\n       \"x\": {\r\n            get : function() {\r\n                return this._.x;\r\n            }\r\n        },\r\n        // y: Number\r\n        //\t\tThe Y coordinate of the default rectangle's position, value 0.\r\n        \"y\": {\r\n            get : function() {\r\n                return this._.y;\r\n            }\r\n        },\r\n        // width: Number\r\n        //\t\tThe width of the default rectangle, value 100.\r\n        \"width\": {\r\n            get : function() {\r\n                return this._.width;\r\n            }\r\n        },\r\n        // height: Number\r\n        //\t\tThe height of the default rectangle, value 100.\r\n        \"height\": {\r\n            get : function() {\r\n                return this._.height;\r\n            }\r\n        },\r\n        // r: Number\r\n        //\t\tThe corner radius for the default rectangle, value 0.\r\n        \"direction\": {\r\n            get : function() {\r\n                return this._.direction;\r\n            }\r\n        },\r\n        \"leftTop\": {\r\n            get: function() {\r\n                var _ = this._;\r\n                return new Point(_.x, _.y);\r\n            }\r\n        },\r\n        \"leftBottom\": {\r\n            get: function() {\r\n                var _ = this._;\r\n                return new Point(_.x, _.y + _.height);\r\n            }\r\n        },\r\n        \"rightTop\": {\r\n            get: function() {\r\n                var _ = this._;\r\n                return new Point(_.x + _.width, _.y);\r\n            }\r\n        },\r\n        \"rightBottom\": {\r\n            get: function() {\r\n                var _ = this._;\r\n                return new Point(_.x + _.width, _.y + _.height);\r\n            }\r\n        },\r\n        \"move\": function(dx, dy) {\r\n            var _ = this._;\r\n            return new Arrow(_.x + dx,_.y + dy,_.width,_.height,_.direction);\r\n        },\r\n        \"containPoint\": function(x,y) {\r\n            // support function(p)\r\n            if (y === undefined) {\r\n                var p = x;\r\n                x = p.x;\r\n                y = p.y;\r\n            }\r\n            var _ = this._;\r\n\r\n            return (x >= _.x) && (x < _.x + _.width) && (y >= _.y) && (y < _.y + _.height);\r\n        },\r\n        \"init\" : function(x, y, width, height, direction) {\r\n            var _ = this._ = {};\r\n            _.x = x || 0;\r\n            _.y = y || 0;\r\n            _.width = width || 0;\r\n            _.height = height || 0;\r\n            _.direction = direction || Direction.top;\r\n        }\r\n    });\r\n\r\n    Arrow.Direction = Direction;\r\n\r\n    return Arrow;\r\n});\r\n"]}