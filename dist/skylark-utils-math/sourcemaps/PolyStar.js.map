{"version":3,"sources":["PolyStar.js"],"names":["define","langx","math","Geometry","PolyStar","inherit","klassName","bounds","get","_","this","p","points","l","length","t","bbox","x","y","r","b","i","box","width","height","radius","sides","pointSize","angle","init"],"mappings":";;;;;;;AAAAA,QACI,sBACA,SACA,cACF,SAASC,EAAOC,EAAMC,GAEpB,GAAIC,GAAWF,EAAKE,SAAWD,EAASE,SACpCC,UAAa,WACbC,QACIC,IAAM,WAGd,GAAIC,GAAIC,KAAKD,EACZE,EAAIF,EAAEG,OACNC,EAAIF,EAAEG,OACNC,EAAIJ,EAAE,EACNK,OAAQH,EAAGE,EAAEE,EAAGF,EAAGA,EAAEG,EAAGC,EAAGJ,EAAEE,EAAGG,EAAGL,EAAEG,EACtC,KAAI,GAAIG,GAAI,EAAGA,EAAIR,IAAKQ,EACvBN,EAAIJ,EAAEU,GACHL,KAAKH,EAAIE,EAAEE,IAAGD,KAAKH,EAAIE,EAAEE,GACzBD,KAAKG,EAAIJ,EAAEE,IAAGD,KAAKG,EAAIJ,EAAEE,GACzBD,KAAKD,EAAIA,EAAEG,IAAGF,KAAKD,EAAIA,EAAEG,GACzBF,KAAKI,EAAIL,EAAEG,IAAGF,KAAKI,EAAIL,EAAEG,EAE7B,IAAII,IACHL,EAAID,KAAKH,EACTK,EAAIF,KAAKD,EACTQ,MAAOP,KAAKG,EAAIH,KAAKH,EACrBW,OAAQR,KAAKI,EAAIJ,KAAKD,EAEvB,OAAOO,KAGJL,GACKT,IAAM,WACF,MAAOE,MAAKD,EAAEQ,IAKtBC,GACIV,IAAM,WACF,MAAOE,MAAKD,EAAES,IAGtBO,QACIjB,IAAM,WACF,MAAOE,MAAKD,EAAEgB,SAGtBC,OACIlB,IAAM,WACF,MAAOE,MAAKD,EAAEiB,QAGtBC,WACInB,IAAM,WACF,MAAOE,MAAKD,EAAEkB,YAGtBC,OACIpB,IAAM,WACF,MAAOE,MAAKD,EAAEmB,QAG5BC,KAAQ,SAASZ,EAAGC,EAAGO,EAAQC,EAAOC,EAAWC,GAChD,GAAInB,GAAIC,KAAKD,CACbA,GAAEQ,EAAIA,EACNR,EAAES,EAAIA,EACNT,EAAEgB,OAASA,EACXhB,EAAEiB,MAAQA,EACVjB,EAAEkB,UAAYA,EACdlB,EAAEmB,MAAQA,IAMZ,OAAOxB","file":"../PolyStar.js","sourcesContent":["define([\r\n    \"skylark-langx/langx\",\r\n    \"./math\",\r\n    \"./Geometry\",\r\n],function(langx, math, Geometry) {\r\n\r\n    var PolyStar = math.PolyStar = Geometry.inherit({\r\n        \"klassName\": \"PolyStar\",\r\n        \"bounds\": {\r\n            get : function() {\r\n                // summary:\r\n                //\t\treturns the bounding box\r\n\t\t\t\tvar _ = this._,\r\n\t\t\t\t\tp = _.points,\r\n\t\t\t\t\tl = p.length,\r\n\t\t\t\t\tt = p[0];\r\n\t\t\t\t\tbbox = {l: t.x, t: t.y, r: t.x, b: t.y};\r\n\t\t\t\tfor(var i = 1; i < l; ++i){\r\n\t\t\t\t\tt = p[i];\r\n\t\t\t\t\tif(bbox.l > t.x) bbox.l = t.x;\r\n\t\t\t\t\tif(bbox.r < t.x) bbox.r = t.x;\r\n\t\t\t\t\tif(bbox.t > t.y) bbox.t = t.y;\r\n\t\t\t\t\tif(bbox.b < t.y) bbox.b = t.y;\r\n\t\t\t\t}\r\n\t\t\t\tvar box = {\r\n\t\t\t\t\tx:\t\tbbox.l,\r\n\t\t\t\t\ty:\t\tbbox.t,\r\n\t\t\t\t\twidth:\tbbox.r - bbox.l,\r\n\t\t\t\t\theight:\tbbox.b - bbox.t\r\n\t\t\t\t};\r\n\t\t\t\treturn box;\t\r\n            }\r\n        },\r\n       \"x\": {\r\n            get : function() {\r\n                return this._.x;\r\n            }\r\n        },\r\n        // y: Number\r\n        //\t\tThe Y coordinate of the default rectangle's position, value 0.\r\n        \"y\": {\r\n            get : function() {\r\n                return this._.y;\r\n            }\r\n        },\r\n        \"radius\": {\r\n            get : function() {\r\n                return this._.radius;\r\n            }\r\n        },\r\n        \"sides\": {\r\n            get : function() {\r\n                return this._.sides;\r\n            }\r\n        },\r\n        \"pointSize\": {\r\n            get : function() {\r\n                return this._.pointSize;\r\n            }\r\n        },\r\n        \"angle\": {\r\n            get : function() {\r\n                return this._.angle;\r\n            }\r\n         },\r\n\t\t\"init\"\t:function(x, y, radius, sides, pointSize, angle){\r\n\t\t\tvar _ = this._;\r\n\t\t\t_.x = x;\r\n\t\t\t_.y = y;\r\n\t\t\t_.radius = radius;\r\n\t\t\t_.sides = sides;\r\n\t\t\t_.pointSize = pointSize;\r\n\t\t\t_.angle = angle;\r\n\t\t}\r\n\r\n\t});\r\n\t\r\n\t\r\n\treturn PolyStar;\r\n\t\r\n});\t\r\n"]}